function k(i,e,t,n){function r(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{h(n.next(d))}catch(g){s(g)}}function c(d){try{h(n.throw(d))}catch(g){s(g)}}function h(d){d.done?o(d.value):r(d.value).then(a,c)}h((n=n.apply(i,e||[])).next())})}var V;(function(i){i.GET="GET",i.PATCH="PATCH",i.POST="POST",i.PUT="PUT",i.DELETE="DELETE"})(V||(V={}));const Di="v1.0",Hi="https://graph.microsoft.com/",Ki=new Set(["graph.microsoft.com","graph.microsoft.us","dod-graph.microsoft.us","graph.microsoft.de","microsoftgraph.chinacloudapi.cn","canary.graph.microsoft.com"]);class _e extends Error{static setGraphClientError(e){let t;return e instanceof Error?t=e:(t=new _e,t.customError=e),t}constructor(e){super(e),Object.setPrototypeOf(this,_e.prototype)}}const xi=["$select","$expand","$orderby","$filter","$top","$skip","$skipToken","$count"],Fi=i=>{const e=o=>o.replace(/\/+$/,""),t=o=>o.replace(/^\/+/,""),n=(o,s)=>[e(o),t(s)].join("/");return Array.prototype.slice.call(i).reduce(n)},$t=i=>{const e=i&&i.constructor&&i.constructor.name;if(e==="Buffer"||e==="Blob"||e==="File"||e==="FormData"||typeof i=="string")return i;if(e==="ArrayBuffer")i=Buffer.from(i);else if(e==="Int8Array"||e==="Int16Array"||e==="Int32Array"||e==="Uint8Array"||e==="Uint16Array"||e==="Uint32Array"||e==="Uint8ClampedArray"||e==="Float32Array"||e==="Float64Array"||e==="DataView")i=Buffer.from(i.buffer);else try{i=JSON.stringify(i)}catch{throw new Error("Unable to stringify the content")}return i},Kr=i=>Fr(i),xr=(i,e)=>(e.forEach(t=>Bi(t)),Fr(i,e)),Fr=(i,e=Ki)=>{if(i=i.toLowerCase(),i.indexOf("https://")!==-1){i=i.replace("https://","");const t=i.indexOf(":"),n=i.indexOf("/");let r="";if(n!==-1)return t!==-1&&t<n?(r=i.substring(0,t),e.has(r)):(r=i.substring(0,n),e.has(r))}return!1},Bi=i=>{if(i.indexOf("/")!==-1)throw new _e("Please add only hosts or hostnames to the CustomHosts config. If the url is `http://example.com:3000/`, host is `example:3000`")};class Re{constructor(e=[]){this.middlewareOptions=new Map;for(const t of e){const n=t.constructor;this.middlewareOptions.set(n,t)}}getMiddlewareOptions(e){return this.middlewareOptions.get(e)}setMiddlewareOptions(e,t){this.middlewareOptions.set(e,t)}}const Gi=()=>{let i="";for(let e=0;e<32;e++)(e===8||e===12||e===16||e===20)&&(i+="-"),i+=Math.floor(Math.random()*16).toString(16);return i},Br=(i,e,t)=>{let n=null;if(typeof Request<"u"&&i instanceof Request)n=i.headers.get(t);else if(typeof e<"u"&&e.headers!==void 0)if(typeof Headers<"u"&&e.headers instanceof Headers)n=e.headers.get(t);else if(e.headers instanceof Array){const r=e.headers;for(let o=0,s=r.length;o<s;o++)if(r[o][0]===t){n=r[o][1];break}}else e.headers[t]!==void 0&&(n=e.headers[t]);return n},Gr=(i,e,t,n)=>{if(typeof Request<"u"&&i instanceof Request)i.headers.set(t,n);else if(typeof e<"u")if(e.headers===void 0)e.headers=new Headers({[t]:n});else if(typeof Headers<"u"&&e.headers instanceof Headers)e.headers.set(t,n);else if(e.headers instanceof Array){let r=0;const o=e.headers.length;for(;r<o;r++){const s=e.headers[r];if(s[0]===t){s[1]=n;break}}r===o&&e.headers.push([t,n])}else Object.assign(e.headers,{[t]:n})},qr=(i,e,t,n)=>{typeof Request<"u"&&i instanceof Request?i.headers.append(t,n):typeof e<"u"&&(e.headers===void 0?e.headers=new Headers({[t]:n}):typeof Headers<"u"&&e.headers instanceof Headers?e.headers.append(t,n):e.headers instanceof Array?e.headers.push([t,n]):e.headers===void 0?e.headers={[t]:n}:e.headers[t]===void 0?e.headers[t]=n:e.headers[t]+=`, ${n}`)},qi=(i,e)=>k(void 0,void 0,void 0,function*(){const t=e.headers.get("Content-Type")?yield e.blob():yield Promise.resolve(void 0),{method:n,headers:r,referrer:o,referrerPolicy:s,mode:a,credentials:c,cache:h,redirect:d,integrity:g,keepalive:m,signal:y}=e;return new Request(i,{method:n,headers:r,body:t,referrer:o,referrerPolicy:s,mode:a,credentials:c,cache:h,redirect:d,integrity:g,keepalive:m,signal:y})});class $i{constructor(e,t){this.authenticationProvider=e,this.authenticationProviderOptions=t}}var qe;(function(i){i[i.NONE=0]="NONE",i[i.REDIRECT_HANDLER_ENABLED=1]="REDIRECT_HANDLER_ENABLED",i[i.RETRY_HANDLER_ENABLED=2]="RETRY_HANDLER_ENABLED",i[i.AUTHENTICATION_HANDLER_ENABLED=4]="AUTHENTICATION_HANDLER_ENABLED"})(qe||(qe={}));class Te{constructor(){this.featureUsage=qe.NONE}static updateFeatureUsageFlag(e,t){let n;e.middlewareControl instanceof Re?n=e.middlewareControl.getMiddlewareOptions(Te):e.middlewareControl=new Re,typeof n>"u"&&(n=new Te,e.middlewareControl.setMiddlewareOptions(Te,n)),n.setFeatureUsage(t)}setFeatureUsage(e){this.featureUsage=this.featureUsage|e}getFeatureUsage(){return this.featureUsage.toString(16)}}class rt{constructor(e){this.authenticationProvider=e}execute(e){return k(this,void 0,void 0,function*(){const t=typeof e.request=="string"?e.request:e.request.url;if(Kr(t)||e.customHosts&&xr(t,e.customHosts)){let n;e.middlewareControl instanceof Re&&(n=e.middlewareControl.getMiddlewareOptions($i));let r,o;n&&(r=n.authenticationProvider,o=n.authenticationProviderOptions),r||(r=this.authenticationProvider);const a=`Bearer ${yield r.getAccessToken(o)}`;qr(e.request,e.options,rt.AUTHORIZATION_HEADER,a),Te.updateFeatureUsageFlag(e,qe.AUTHENTICATION_HANDLER_ENABLED)}else e.options.headers&&delete e.options.headers[rt.AUTHORIZATION_HEADER];return yield this.nextMiddleware.execute(e)})}setNext(e){this.nextMiddleware=e}}rt.AUTHORIZATION_HEADER="Authorization";class zi{execute(e){return k(this,void 0,void 0,function*(){e.response=yield fetch(e.request,e.options)})}}class M{constructor(e=M.DEFAULT_DELAY,t=M.DEFAULT_MAX_RETRIES,n=M.defaultShouldRetry){if(e>M.MAX_DELAY&&t>M.MAX_MAX_RETRIES){const r=new Error(`Delay and MaxRetries should not be more than ${M.MAX_DELAY} and ${M.MAX_MAX_RETRIES}`);throw r.name="MaxLimitExceeded",r}else if(e>M.MAX_DELAY){const r=new Error(`Delay should not be more than ${M.MAX_DELAY}`);throw r.name="MaxLimitExceeded",r}else if(t>M.MAX_MAX_RETRIES){const r=new Error(`MaxRetries should not be more than ${M.MAX_MAX_RETRIES}`);throw r.name="MaxLimitExceeded",r}else if(e<0&&t<0){const r=new Error("Delay and MaxRetries should not be negative");throw r.name="MinExpectationNotMet",r}else if(e<0){const r=new Error("Delay should not be negative");throw r.name="MinExpectationNotMet",r}else if(t<0){const r=new Error("MaxRetries should not be negative");throw r.name="MinExpectationNotMet",r}this.delay=Math.min(e,M.MAX_DELAY),this.maxRetries=Math.min(t,M.MAX_MAX_RETRIES),this.shouldRetry=n}getMaxDelay(){return M.MAX_DELAY}}M.DEFAULT_DELAY=3;M.DEFAULT_MAX_RETRIES=3;M.MAX_DELAY=180;M.MAX_MAX_RETRIES=10;M.defaultShouldRetry=()=>!0;class Ae{constructor(e=new M){this.options=e}isRetry(e){return Ae.RETRY_STATUS_CODES.indexOf(e.status)!==-1}isBuffered(e,t){const n=typeof e=="string"?t.method:e.method;return!((n===V.PUT||n===V.PATCH||n===V.POST)&&Br(e,t,"Content-Type")==="application/octet-stream")}getDelay(e,t,n){const r=()=>Number(Math.random().toFixed(3)),o=e.headers!==void 0?e.headers.get(Ae.RETRY_AFTER_HEADER):null;let s;return o!==null?Number.isNaN(Number(o))?s=Math.round((new Date(o).getTime()-Date.now())/1e3):s=Number(o):s=t>=2?this.getExponentialBackOffTime(t)+n+r():n+r(),Math.min(s,this.options.getMaxDelay()+r())}getExponentialBackOffTime(e){return Math.round(1/2*(Math.pow(2,e)-1))}sleep(e){return k(this,void 0,void 0,function*(){const t=e*1e3;return new Promise(n=>setTimeout(n,t))})}getOptions(e){let t;return e.middlewareControl instanceof Re&&(t=e.middlewareControl.getMiddlewareOptions(this.options.constructor)),typeof t>"u"&&(t=Object.assign(new M,this.options)),t}executeWithRetry(e,t,n){return k(this,void 0,void 0,function*(){if(yield this.nextMiddleware.execute(e),t<n.maxRetries&&this.isRetry(e.response)&&this.isBuffered(e.request,e.options)&&n.shouldRetry(n.delay,t,e.request,e.options,e.response)){++t,Gr(e.request,e.options,Ae.RETRY_ATTEMPT_HEADER,t.toString());const r=this.getDelay(e.response,t,n.delay);return yield this.sleep(r),yield this.executeWithRetry(e,t,n)}else return})}execute(e){return k(this,void 0,void 0,function*(){const n=this.getOptions(e);return Te.updateFeatureUsageFlag(e,qe.RETRY_HANDLER_ENABLED),yield this.executeWithRetry(e,0,n)})}setNext(e){this.nextMiddleware=e}}Ae.RETRY_STATUS_CODES=[429,503,504];Ae.RETRY_ATTEMPT_HEADER="Retry-Attempt";Ae.RETRY_AFTER_HEADER="Retry-After";class X{constructor(e=X.DEFAULT_MAX_REDIRECTS,t=X.defaultShouldRedirect){if(e>X.MAX_MAX_REDIRECTS){const n=new Error(`MaxRedirects should not be more than ${X.MAX_MAX_REDIRECTS}`);throw n.name="MaxLimitExceeded",n}if(e<0){const n=new Error("MaxRedirects should not be negative");throw n.name="MinExpectationNotMet",n}this.maxRedirects=e,this.shouldRedirect=t}}X.DEFAULT_MAX_REDIRECTS=5;X.MAX_MAX_REDIRECTS=20;X.defaultShouldRedirect=()=>!0;let Ye=class we{constructor(e=new X){this.options=e}isRedirect(e){return we.REDIRECT_STATUS_CODES.indexOf(e.status)!==-1}hasLocationHeader(e){return e.headers.has(we.LOCATION_HEADER)}getLocationHeader(e){return e.headers.get(we.LOCATION_HEADER)}isRelativeURL(e){return e.indexOf("://")===-1}shouldDropAuthorizationHeader(e,t){const n=/^[A-Za-z].+?:\/\/.+?(?=\/|$)/,r=n.exec(e);let o,s;r!==null&&(o=r[0]);const a=n.exec(t);return a!==null&&(s=a[0]),typeof o<"u"&&typeof s<"u"&&o!==s}updateRequestUrl(e,t){return k(this,void 0,void 0,function*(){t.request=typeof t.request=="string"?e:yield qi(e,t.request)})}getOptions(e){let t;return e.middlewareControl instanceof Re&&(t=e.middlewareControl.getMiddlewareOptions(X)),typeof t>"u"&&(t=Object.assign(new X,this.options)),t}executeWithRedirect(e,t,n){return k(this,void 0,void 0,function*(){yield this.nextMiddleware.execute(e);const r=e.response;if(t<n.maxRedirects&&this.isRedirect(r)&&this.hasLocationHeader(r)&&n.shouldRedirect(r)){if(++t,r.status===we.STATUS_CODE_SEE_OTHER)e.options.method=V.GET,delete e.options.body;else{const o=this.getLocationHeader(r);!this.isRelativeURL(o)&&this.shouldDropAuthorizationHeader(r.url,o)&&delete e.options.headers[we.AUTHORIZATION_HEADER],yield this.updateRequestUrl(o,e)}yield this.executeWithRedirect(e,t,n)}else return})}execute(e){return k(this,void 0,void 0,function*(){const n=this.getOptions(e);return e.options.redirect=we.MANUAL_REDIRECT,Te.updateFeatureUsageFlag(e,qe.REDIRECT_HANDLER_ENABLED),yield this.executeWithRedirect(e,0,n)})}setNext(e){this.nextMiddleware=e}};Ye.REDIRECT_STATUS_CODES=[301,302,303,307,308];Ye.STATUS_CODE_SEE_OTHER=303;Ye.LOCATION_HEADER="Location";Ye.AUTHORIZATION_HEADER="Authorization";Ye.MANUAL_REDIRECT="manual";const Qi="3.0.7";class Y{execute(e){return k(this,void 0,void 0,function*(){const t=typeof e.request=="string"?e.request:e.request.url;if(Kr(t)||e.customHosts&&xr(t,e.customHosts)){let n=Br(e.request,e.options,Y.CLIENT_REQUEST_ID_HEADER);n||(n=Gi(),Gr(e.request,e.options,Y.CLIENT_REQUEST_ID_HEADER,n));let r=`${Y.PRODUCT_NAME}/${Qi}`,o;if(e.middlewareControl instanceof Re&&(o=e.middlewareControl.getMiddlewareOptions(Te)),o){const s=o.getFeatureUsage();r+=` (${Y.FEATURE_USAGE_STRING}=${s})`}qr(e.request,e.options,Y.SDK_VERSION_HEADER,r)}else delete e.options.headers[Y.CLIENT_REQUEST_ID_HEADER],delete e.options.headers[Y.SDK_VERSION_HEADER];return yield this.nextMiddleware.execute(e)})}setNext(e){this.nextMiddleware=e}}Y.CLIENT_REQUEST_ID_HEADER="client-request-id";Y.SDK_VERSION_HEADER="SdkVersion";Y.PRODUCT_NAME="graph-js";Y.FEATURE_USAGE_STRING="featureUsage";var ir;(function(i){i[i.MANUAL=0]="MANUAL",i[i.RANDOM=1]="RANDOM"})(ir||(ir={}));var oe;(function(i){i.ARRAYBUFFER="arraybuffer",i.BLOB="blob",i.DOCUMENT="document",i.JSON="json",i.RAW="raw",i.STREAM="stream",i.TEXT="text"})(oe||(oe={}));var Wt;(function(i){i.TEXT_HTML="text/html",i.TEXT_XML="text/xml",i.APPLICATION_XML="application/xml",i.APPLICATION_XHTML="application/xhtml+xml"})(Wt||(Wt={}));var yt;(function(i){i.TEXT_PLAIN="text/plain",i.APPLICATION_JSON="application/json"})(yt||(yt={}));var Tt;(function(i){i.DOCUMENT="^(text\\/(html|xml))|(application\\/(xml|xhtml\\+xml))$",i.IMAGE="^image\\/.+"})(Tt||(Tt={}));class Xe{static parseDocumentResponse(e,t){return typeof DOMParser<"u"?new Promise((n,r)=>{e.text().then(o=>{try{const a=new DOMParser().parseFromString(o,t);n(a)}catch(s){r(s)}})}):Promise.resolve(e.body)}static convertResponse(e,t){return k(this,void 0,void 0,function*(){if(e.status===204)return Promise.resolve();let n;const r=e.headers.get("Content-type");switch(t){case oe.ARRAYBUFFER:n=yield e.arrayBuffer();break;case oe.BLOB:n=yield e.blob();break;case oe.DOCUMENT:n=yield Xe.parseDocumentResponse(e,Wt.TEXT_XML);break;case oe.JSON:n=yield e.json();break;case oe.STREAM:n=yield Promise.resolve(e.body);break;case oe.TEXT:n=yield e.text();break;default:if(r!==null){const o=r.split(";")[0];new RegExp(Tt.DOCUMENT).test(o)?n=yield Xe.parseDocumentResponse(e,o):new RegExp(Tt.IMAGE).test(o)?n=e.blob():o===yt.TEXT_PLAIN?n=yield e.text():o===yt.APPLICATION_JSON?n=yield e.json():n=Promise.resolve(e.body)}else n=Promise.resolve(e.body);break}return n})}static getResponse(e,t,n){return k(this,void 0,void 0,function*(){if(t===oe.RAW)return Promise.resolve(e);{const r=yield Xe.convertResponse(e,t);if(e.ok)if(typeof n=="function")n(null,r);else return r;else throw r}})}}class Vi{constructor(e){this.provider=e}getAccessToken(){return k(this,void 0,void 0,function*(){return new Promise((e,t)=>{this.provider((n,r)=>k(this,void 0,void 0,function*(){if(r)e(r);else{if(!n){const s="Access token is undefined or empty.						Please provide a valid token.						For more help - https://github.com/microsoftgraph/msgraph-sdk-javascript/blob/dev/docs/CustomAuthenticationProvider.md";n=new _e(s)}const o=yield _e.setGraphClientError(n);t(o)}}))})})}}class Ze extends Error{constructor(e=-1,t,n){super(t||n&&n.message),Object.setPrototypeOf(this,Ze.prototype),this.statusCode=e,this.code=null,this.requestId=null,this.date=new Date,this.body=null,this.stack=n?n.stack:this.stack}}class At{static constructError(e,t,n){const r=new Ze(t,"",e);return e.name!==void 0&&(r.code=e.name),r.body=e.toString(),r.date=new Date,r.headers=n==null?void 0:n.headers,r}static constructErrorFromResponse(e,t,n){const r=e.error,o=new Ze(t,r.message);return o.code=r.code,r.innerError!==void 0&&(o.requestId=r.innerError["request-id"],o.date=new Date(r.innerError.date)),o.body=JSON.stringify(r),o.headers=n==null?void 0:n.headers,o}static getError(e=null,t=-1,n,r){return k(this,void 0,void 0,function*(){let o;if(e&&e.error?o=At.constructErrorFromResponse(e,t,r):e instanceof Error?o=At.constructError(e,t,r):(o=new Ze(t),o.body=e),typeof n=="function")n(o,null);else return o})}}class Yi{constructor(e,t,n){this.parsePath=r=>{if(r.indexOf("https://")!==-1){r=r.replace("https://","");const s=r.indexOf("/");s!==-1&&(this.urlComponents.host="https://"+r.substring(0,s),r=r.substring(s+1,r.length));const a=r.indexOf("/");a!==-1&&(this.urlComponents.version=r.substring(0,a),r=r.substring(a+1,r.length))}r.charAt(0)==="/"&&(r=r.substr(1));const o=r.indexOf("?");if(o===-1)this.urlComponents.path=r;else{this.urlComponents.path=r.substr(0,o);const s=r.substring(o+1,r.length).split("&");for(const a of s)this.parseQueryParameter(a)}},this.httpClient=e,this.config=t,this.urlComponents={host:this.config.baseUrl,version:this.config.defaultVersion,oDataQueryParams:{},otherURLQueryParams:{},otherURLQueryOptions:[]},this._headers={},this._options={},this._middlewareOptions=[],this.parsePath(n)}addCsvQueryParameter(e,t,n){this.urlComponents.oDataQueryParams[e]=this.urlComponents.oDataQueryParams[e]?this.urlComponents.oDataQueryParams[e]+",":"";let r=[];n.length>1&&typeof t=="string"?r=Array.prototype.slice.call(n):typeof t=="string"?r.push(t):r=r.concat(t),this.urlComponents.oDataQueryParams[e]+=r.join(",")}buildFullUrl(){const e=Fi([this.urlComponents.host,this.urlComponents.version,this.urlComponents.path])+this.createQueryString();return this.config.debugLogging&&console.log(e),e}createQueryString(){const e=this.urlComponents,t=[];if(Object.keys(e.oDataQueryParams).length!==0)for(const n in e.oDataQueryParams)Object.prototype.hasOwnProperty.call(e.oDataQueryParams,n)&&t.push(n+"="+e.oDataQueryParams[n]);if(Object.keys(e.otherURLQueryParams).length!==0)for(const n in e.otherURLQueryParams)Object.prototype.hasOwnProperty.call(e.otherURLQueryParams,n)&&t.push(n+"="+e.otherURLQueryParams[n]);if(e.otherURLQueryOptions.length!==0)for(const n of e.otherURLQueryOptions)t.push(n);return t.length>0?"?"+t.join("&"):""}parseQueryParameter(e){if(typeof e=="string")if(e.charAt(0)==="?"&&(e=e.substring(1)),e.indexOf("&")!==-1){const t=e.split("&");for(const n of t)this.parseQueryParamenterString(n)}else this.parseQueryParamenterString(e);else if(e.constructor===Object)for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&this.setURLComponentsQueryParamater(t,e[t]);return this}parseQueryParamenterString(e){if(this.isValidQueryKeyValuePair(e)){const t=e.indexOf("="),n=e.substring(0,t),r=e.substring(t+1);this.setURLComponentsQueryParamater(n,r)}else this.urlComponents.otherURLQueryOptions.push(e)}setURLComponentsQueryParamater(e,t){if(xi.indexOf(e)!==-1){const n=this.urlComponents.oDataQueryParams[e],r=n&&(e==="$expand"||e==="$select"||e==="$orderby");this.urlComponents.oDataQueryParams[e]=r?n+","+t:t}else this.urlComponents.otherURLQueryParams[e]=t}isValidQueryKeyValuePair(e){const t=e.indexOf("=");return!(t===-1||e.indexOf("(")!==-1&&e.indexOf("(")<t)}updateRequestOptions(e){const t=Object.assign({},e.headers);if(this.config.fetchOptions!==void 0){const n=Object.assign({},this.config.fetchOptions);Object.assign(e,n),typeof this.config.fetchOptions.headers!==void 0&&(e.headers=Object.assign({},this.config.fetchOptions.headers))}Object.assign(e,this._options),e.headers!==void 0&&Object.assign(t,e.headers),Object.assign(t,this._headers),e.headers=t}send(e,t,n){var r;return k(this,void 0,void 0,function*(){let o;const s=new Re(this._middlewareOptions);this.updateRequestOptions(t);const a=(r=this.config)===null||r===void 0?void 0:r.customHosts;try{return o=(yield this.httpClient.sendRequest({request:e,options:t,middlewareControl:s,customHosts:a})).response,yield Xe.getResponse(o,this._responseType,n)}catch(c){if(c instanceof _e)throw c;let h;throw o&&(h=o.status),yield At.getError(c,h,n,o)}})}setHeaderContentType(){if(!this._headers){this.header("Content-Type","application/json");return}const e=Object.keys(this._headers);for(const t of e)if(t.toLowerCase()==="content-type")return;this.header("Content-Type","application/json")}header(e,t){return this._headers[e]=t,this}headers(e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(this._headers[t]=e[t]);return this}option(e,t){return this._options[e]=t,this}options(e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(this._options[t]=e[t]);return this}middlewareOptions(e){return this._middlewareOptions=e,this}version(e){return this.urlComponents.version=e,this}responseType(e){return this._responseType=e,this}select(e){return this.addCsvQueryParameter("$select",e,arguments),this}expand(e){return this.addCsvQueryParameter("$expand",e,arguments),this}orderby(e){return this.addCsvQueryParameter("$orderby",e,arguments),this}filter(e){return this.urlComponents.oDataQueryParams.$filter=e,this}search(e){return this.urlComponents.oDataQueryParams.$search=e,this}top(e){return this.urlComponents.oDataQueryParams.$top=e,this}skip(e){return this.urlComponents.oDataQueryParams.$skip=e,this}skipToken(e){return this.urlComponents.oDataQueryParams.$skipToken=e,this}count(e=!0){return this.urlComponents.oDataQueryParams.$count=e.toString(),this}query(e){return this.parseQueryParameter(e)}get(e){return k(this,void 0,void 0,function*(){const t=this.buildFullUrl(),n={method:V.GET};return yield this.send(t,n,e)})}post(e,t){return k(this,void 0,void 0,function*(){const n=this.buildFullUrl(),r={method:V.POST,body:$t(e)};return(e&&e.constructor&&e.constructor.name)==="FormData"?r.headers={}:(this.setHeaderContentType(),r.headers=this._headers),yield this.send(n,r,t)})}create(e,t){return k(this,void 0,void 0,function*(){return yield this.post(e,t)})}put(e,t){return k(this,void 0,void 0,function*(){const n=this.buildFullUrl();this.setHeaderContentType();const r={method:V.PUT,body:$t(e)};return yield this.send(n,r,t)})}patch(e,t){return k(this,void 0,void 0,function*(){const n=this.buildFullUrl();this.setHeaderContentType();const r={method:V.PATCH,body:$t(e)};return yield this.send(n,r,t)})}update(e,t){return k(this,void 0,void 0,function*(){return yield this.patch(e,t)})}delete(e){return k(this,void 0,void 0,function*(){const t=this.buildFullUrl(),n={method:V.DELETE};return yield this.send(t,n,e)})}del(e){return k(this,void 0,void 0,function*(){return yield this.delete(e)})}getStream(e){return k(this,void 0,void 0,function*(){const t=this.buildFullUrl(),n={method:V.GET};return this.responseType(oe.STREAM),yield this.send(t,n,e)})}putStream(e,t){return k(this,void 0,void 0,function*(){const n=this.buildFullUrl(),r={method:V.PUT,headers:{"Content-Type":"application/octet-stream"},body:e};return yield this.send(n,r,t)})}}class $r{constructor(...e){if(!e||!e.length){const t=new Error;throw t.name="InvalidMiddlewareChain",t.message="Please provide a default middleware chain or custom middleware chain",t}this.setMiddleware(...e)}setMiddleware(...e){e.length>1?this.parseMiddleWareArray(e):this.middleware=e[0]}parseMiddleWareArray(e){e.forEach((t,n)=>{n<e.length-1&&t.setNext(e[n+1])}),this.middleware=e[0]}sendRequest(e){return k(this,void 0,void 0,function*(){if(typeof e.request=="string"&&e.options===void 0){const t=new Error;throw t.name="InvalidRequestOptions",t.message="Unable to execute the middleware, Please provide valid options for a request",t}return yield this.middleware.execute(e),e})}}const ji=()=>typeof process=="object"&&typeof require=="function";class pn{static createWithAuthenticationProvider(e){const t=new rt(e),n=new Ae(new M),r=new Y,o=new zi;if(t.setNext(n),ji()){const s=new Ye(new X);n.setNext(s),s.setNext(r)}else n.setNext(r);return r.setNext(o),pn.createWithMiddleware(t)}static createWithMiddleware(...e){return new $r(...e)}}const Wi=()=>{if(typeof Promise>"u"&&typeof fetch>"u"){const i=new Error("Library cannot function without Promise and fetch. So, please provide polyfill for them.");throw i.name="PolyFillNotAvailable",i}else if(typeof Promise>"u"){const i=new Error("Library cannot function without Promise. So, please provide polyfill for it.");throw i.name="PolyFillNotAvailable",i}else if(typeof fetch>"u"){const i=new Error("Library cannot function without fetch. So, please provide polyfill for it.");throw i.name="PolyFillNotAvailable",i}return!0};class Jt{static init(e){const t={};for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=n==="authProvider"?new Vi(e[n]):e[n]);return Jt.initWithMiddleware(t)}static initWithMiddleware(e){return new Jt(e)}constructor(e){this.config={baseUrl:Hi,debugLogging:!1,defaultVersion:Di},Wi();for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(this.config[n]=e[n]);let t;if(e.authProvider!==void 0&&e.middleware!==void 0){const n=new Error;throw n.name="AmbiguityInInitialization",n.message="Unable to Create Client, Please provide either authentication provider for default middleware chain or custom middleware chain not both",n}else if(e.authProvider!==void 0)t=pn.createWithAuthenticationProvider(e.authProvider);else if(e.middleware!==void 0)t=new $r(...[].concat(e.middleware));else{const n=new Error;throw n.name="InvalidMiddlewareChain",n.message="Unable to Create Client, Please provide either authentication provider for default middleware chain or custom middleware chain",n}this.httpClient=t}api(e){return new Yi(this.httpClient,this.config,e)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const u={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},dt={CLIENT_ERROR_RANGE_START:400,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR_RANGE_START:500,SERVER_ERROR_RANGE_END:599},je=[u.OPENID_SCOPE,u.PROFILE_SCOPE,u.OFFLINE_ACCESS_SCOPE],sr=[...je,u.EMAIL_SCOPE],q={CONTENT_TYPE:"Content-Type",CONTENT_LENGTH:"Content-Length",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},H={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},Ee={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},lt={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},K={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},ar={PLAIN:"plain",S256:"S256"},it={QUERY:"query",FRAGMENT:"fragment"},Ji={...it},zr={AUTHORIZATION_CODE_GRANT:"authorization_code",REFRESH_TOKEN_GRANT:"refresh_token"},ut={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",GENERIC_ACCOUNT_TYPE:"Generic"},G={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},E={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},mn="appmetadata",Xi="client_info",et="1",Et={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:3600*24},z={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},x={SCHEMA_VERSION:5,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},R={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},tt={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},cr={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},hr={username:"username",password:"password"},gt={httpSuccess:200,httpBadRequest:400},Ue={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},zt={CONFIGURED_NO_AUTO_DETECTION:"2",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},ye={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},Zi={Pop:"pop"},es=300;/*! @azure/msal-common v14.16.0 2024-11-05 */const Cn="unexpected_error",ts="post_request_failed";/*! @azure/msal-common v14.16.0 2024-11-05 */const dr={[Cn]:"Unexpected error in authentication.",[ts]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class N extends Error{constructor(e,t,n){const r=t?`${e}: ${t}`:e;super(r),Object.setPrototypeOf(this,N.prototype),this.errorCode=e||u.EMPTY_STRING,this.errorMessage=t||u.EMPTY_STRING,this.subError=n||u.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function Qr(i,e){return new N(i,e?`${dr[i]} ${e}`:dr[i])}/*! @azure/msal-common v14.16.0 2024-11-05 */const yn="client_info_decoding_error",Vr="client_info_empty_error",Tn="token_parsing_error",Yr="null_or_empty_token",le="endpoints_resolution_error",jr="network_error",Wr="openid_config_error",Jr="hash_not_deserialized",$e="invalid_state",Xr="state_mismatch",It="state_not_found",Zr="nonce_mismatch",An="auth_time_not_found",eo="max_age_transpired",ns="multiple_matching_tokens",rs="multiple_matching_accounts",to="multiple_matching_appMetadata",no="request_cannot_be_made",ro="cannot_remove_empty_scope",oo="cannot_append_scopeset",Xt="empty_input_scopeset",os="device_code_polling_cancelled",is="device_code_expired",ss="device_code_unknown_error",En="no_account_in_silent_request",io="invalid_cache_record",In="invalid_cache_environment",Zt="no_account_found",en="no_crypto_object",tn="unexpected_credential_type",as="invalid_assertion",cs="invalid_client_credential",ue="token_refresh_required",hs="user_timeout_reached",so="token_claims_cnf_required_for_signedjwt",ao="authorization_code_missing_from_server_response",co="binding_key_not_removed",ho="end_session_endpoint_not_supported",vn="key_id_missing",ds="no_network_connectivity",ls="user_canceled",us="missing_tenant_id_error",w="method_not_implemented",gs="nested_app_auth_bridge_disabled";/*! @azure/msal-common v14.16.0 2024-11-05 */const lr={[yn]:"The client info could not be parsed/decoded correctly",[Vr]:"The client info was empty",[Tn]:"Token cannot be parsed",[Yr]:"The token is null or empty",[le]:"Endpoints cannot be resolved",[jr]:"Network request failed",[Wr]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[Jr]:"The hash parameters could not be deserialized",[$e]:"State was not the expected format",[Xr]:"State mismatch error",[It]:"State not found",[Zr]:"Nonce mismatch error",[An]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[eo]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[ns]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[rs]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[to]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[no]:"Token request cannot be made without authorization code or refresh token.",[ro]:"Cannot remove null or empty scope from ScopeSet",[oo]:"Cannot append ScopeSet",[Xt]:"Empty input ScopeSet cannot be processed",[os]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[is]:"Device code is expired.",[ss]:"Device code stopped polling for unknown reasons.",[En]:"Please pass an account object, silent flow is not supported without account information",[io]:"Cache record object was null or undefined.",[In]:"Invalid environment when attempting to create cache entry",[Zt]:"No account found in cache for given key.",[en]:"No crypto object detected.",[tn]:"Unexpected credential type.",[as]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[cs]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[ue]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[hs]:"User defined timeout for device code polling reached",[so]:"Cannot generate a POP jwt if the token_claims are not populated",[ao]:"Server response does not contain an authorization code to proceed",[co]:"Could not remove the credential's binding key from storage.",[ho]:"The provided authority does not support logout",[vn]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[ds]:"No network connectivity. Check your internet connection.",[ls]:"User cancelled the flow.",[us]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[w]:"This method has not been implemented",[gs]:"The nested app auth bridge is disabled"};class Pt extends N{constructor(e,t){super(e,t?`${lr[e]}: ${t}`:lr[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,Pt.prototype)}}function f(i,e){return new Pt(i,e)}/*! @azure/msal-common v14.16.0 2024-11-05 */const vt={createNewGuid:()=>{throw f(w)},base64Decode:()=>{throw f(w)},base64Encode:()=>{throw f(w)},base64UrlEncode:()=>{throw f(w)},encodeKid:()=>{throw f(w)},async getPublicKeyThumbprint(){throw f(w)},async removeTokenBindingKey(){throw f(w)},async clearKeystore(){throw f(w)},async signJwt(){throw f(w)},async hashString(){throw f(w)}};/*! @azure/msal-common v14.16.0 2024-11-05 */var P;(function(i){i[i.Error=0]="Error",i[i.Warning=1]="Warning",i[i.Info=2]="Info",i[i.Verbose=3]="Verbose",i[i.Trace=4]="Trace"})(P||(P={}));class Ie{constructor(e,t,n){this.level=P.Info;const r=()=>{},o=e||Ie.createDefaultLoggerOptions();this.localCallback=o.loggerCallback||r,this.piiLoggingEnabled=o.piiLoggingEnabled||!1,this.level=typeof o.logLevel=="number"?o.logLevel:P.Info,this.correlationId=o.correlationId||u.EMPTY_STRING,this.packageName=t||u.EMPTY_STRING,this.packageVersion=n||u.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:P.Info}}clone(e,t,n){return new Ie({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const o=`${`[${new Date().toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${P[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,o,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:P.Error,containsPii:!1,correlationId:t||u.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:P.Error,containsPii:!0,correlationId:t||u.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:P.Warning,containsPii:!1,correlationId:t||u.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:P.Warning,containsPii:!0,correlationId:t||u.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:P.Info,containsPii:!1,correlationId:t||u.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:P.Info,containsPii:!0,correlationId:t||u.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:P.Verbose,containsPii:!1,correlationId:t||u.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:P.Verbose,containsPii:!0,correlationId:t||u.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:P.Trace,containsPii:!1,correlationId:t||u.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:P.Trace,containsPii:!0,correlationId:t||u.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}/*! @azure/msal-common v14.16.0 2024-11-05 */const lo="@azure/msal-common",wn="14.16.0";/*! @azure/msal-common v14.16.0 2024-11-05 */const Sn={None:"none"};/*! @azure/msal-common v14.16.0 2024-11-05 */function Ne(i,e){const t=fs(i);try{const n=e(t);return JSON.parse(n)}catch{throw f(Tn)}}function fs(i){if(!i)throw f(Yr);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(i);if(!t||t.length<4)throw f(Tn);return t[2]}function uo(i,e){if(e===0||Date.now()-3e5>i+e)throw f(eo)}/*! @azure/msal-common v14.16.0 2024-11-05 */function he(){return Math.round(new Date().getTime()/1e3)}function nn(i,e){const t=Number(i)||0;return he()+e>t}function ps(i){return Number(i)>he()}/*! @azure/msal-common v14.16.0 2024-11-05 */function Ke(i){return[ms(i),Cs(i),ys(i),Ts(i),As(i)].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}function Nt(i,e,t,n,r){return{credentialType:E.ID_TOKEN,homeAccountId:i,environment:e,clientId:n,secret:t,realm:r}}function Mt(i,e,t,n,r,o,s,a,c,h,d,g,m,y,I){var L,F;const v={homeAccountId:i,credentialType:E.ACCESS_TOKEN,secret:t,cachedAt:he().toString(),expiresOn:s.toString(),extendedExpiresOn:a.toString(),environment:e,clientId:n,realm:r,target:o,tokenType:d||R.BEARER};if(g&&(v.userAssertionHash=g),h&&(v.refreshOn=h.toString()),y&&(v.requestedClaims=y,v.requestedClaimsHash=I),((L=v.tokenType)==null?void 0:L.toLowerCase())!==R.BEARER.toLowerCase())switch(v.credentialType=E.ACCESS_TOKEN_WITH_AUTH_SCHEME,v.tokenType){case R.POP:const J=Ne(t,c);if(!((F=J==null?void 0:J.cnf)!=null&&F.kid))throw f(so);v.keyId=J.cnf.kid;break;case R.SSH:v.keyId=m}return v}function go(i,e,t,n,r,o,s){const a={credentialType:E.REFRESH_TOKEN,homeAccountId:i,environment:e,clientId:n,secret:t};return o&&(a.userAssertionHash=o),r&&(a.familyId=r),s&&(a.expiresOn=s.toString()),a}function _n(i){return i.hasOwnProperty("homeAccountId")&&i.hasOwnProperty("environment")&&i.hasOwnProperty("credentialType")&&i.hasOwnProperty("clientId")&&i.hasOwnProperty("secret")}function ur(i){return i?_n(i)&&i.hasOwnProperty("realm")&&i.hasOwnProperty("target")&&(i.credentialType===E.ACCESS_TOKEN||i.credentialType===E.ACCESS_TOKEN_WITH_AUTH_SCHEME):!1}function gr(i){return i?_n(i)&&i.hasOwnProperty("realm")&&i.credentialType===E.ID_TOKEN:!1}function fr(i){return i?_n(i)&&i.credentialType===E.REFRESH_TOKEN:!1}function ms(i){return[i.homeAccountId,i.environment].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}function Cs(i){const e=i.credentialType===E.REFRESH_TOKEN&&i.familyId||i.clientId;return[i.credentialType,e,i.realm||""].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}function ys(i){return(i.target||"").toLowerCase()}function Ts(i){return(i.requestedClaimsHash||"").toLowerCase()}function As(i){return i.tokenType&&i.tokenType.toLowerCase()!==R.BEARER.toLowerCase()?i.tokenType.toLowerCase():""}function Es(i,e){const t=i.indexOf(x.CACHE_KEY)===0;let n=!0;return e&&(n=e.hasOwnProperty("failedRequests")&&e.hasOwnProperty("errors")&&e.hasOwnProperty("cacheHits")),t&&n}function Is(i,e){let t=!1;i&&(t=i.indexOf(tt.THROTTLING_PREFIX)===0);let n=!0;return e&&(n=e.hasOwnProperty("throttleTime")),t&&n}function vs({environment:i,clientId:e}){return[mn,i,e].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}function ws(i,e){return e?i.indexOf(mn)===0&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("environment"):!1}function Ss(i,e){return e?i.indexOf(Et.CACHE_KEY)===0&&e.hasOwnProperty("aliases")&&e.hasOwnProperty("preferred_cache")&&e.hasOwnProperty("preferred_network")&&e.hasOwnProperty("canonical_authority")&&e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("aliasesFromNetwork")&&e.hasOwnProperty("endpointsFromNetwork")&&e.hasOwnProperty("expiresAt")&&e.hasOwnProperty("jwks_uri"):!1}function pr(){return he()+Et.REFRESH_TIME_SECONDS}function ft(i,e,t){i.authorization_endpoint=e.authorization_endpoint,i.token_endpoint=e.token_endpoint,i.end_session_endpoint=e.end_session_endpoint,i.issuer=e.issuer,i.endpointsFromNetwork=t,i.jwks_uri=e.jwks_uri}function Qt(i,e,t){i.aliases=e.aliases,i.preferred_cache=e.preferred_cache,i.preferred_network=e.preferred_network,i.aliasesFromNetwork=t}function mr(i){return i.expiresAt<=he()}/*! @azure/msal-common v14.16.0 2024-11-05 */const fo="redirect_uri_empty",_s="claims_request_parsing_error",po="authority_uri_insecure",Je="url_parse_error",mo="empty_url_error",Co="empty_input_scopes_error",yo="invalid_prompt_value",Rn="invalid_claims",To="token_request_empty",Ao="logout_request_empty",Eo="invalid_code_challenge_method",kn="pkce_params_missing",bn="invalid_cloud_discovery_metadata",Io="invalid_authority_metadata",vo="untrusted_authority",Ut="missing_ssh_jwk",wo="missing_ssh_kid",Rs="missing_nonce_authentication_header",ks="invalid_authentication_header",So="cannot_set_OIDCOptions",_o="cannot_allow_native_broker",Ro="authority_mismatch";/*! @azure/msal-common v14.16.0 2024-11-05 */const bs={[fo]:"A redirect URI is required for all calls, and none has been set.",[_s]:"Could not parse the given claims request object.",[po]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[Je]:"URL could not be parsed into appropriate segments.",[mo]:"URL was empty or null.",[Co]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[yo]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[Rn]:"Given claims parameter must be a stringified JSON object.",[To]:"Token request was empty and not found in cache.",[Ao]:"The logout request was null or undefined.",[Eo]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[kn]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[bn]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[Io]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[vo]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[Ut]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[wo]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Rs]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[ks]:"Invalid authentication header provided",[So]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[_o]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[Ro]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class On extends N{constructor(e){super(e,bs[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,On.prototype)}}function b(i){return new On(i)}/*! @azure/msal-common v14.16.0 2024-11-05 */class ee{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return Object.keys(t).length===0}catch{}return!0}static startsWith(e,t){return e.indexOf(t)===0}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),r=o=>decodeURIComponent(o.replace(/\+/g," "));return n.forEach(o=>{if(o.trim()){const[s,a]=o.split(/=(.+)/g,2);s&&a&&(t[r(s)]=r(a))}}),t}static trimArrayEntries(e){return e.map(t=>t.trim())}static removeEmptyStringsFromArray(e){return e.filter(t=>!!t)}static jsonParseHelper(e){try{return JSON.parse(e)}catch{return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class U{constructor(e){const t=e?ee.trimArrayEntries([...e]):[],n=t?ee.removeEmptyStringsFromArray(t):[];this.validateInputScopes(n),this.scopes=new Set,n.forEach(r=>this.scopes.add(r))}static fromString(e){const n=(e||u.EMPTY_STRING).split(" ");return new U(n)}static createSearchScopes(e){const t=new U(e);return t.containsOnlyOIDCScopes()?t.removeScope(u.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw b(Co)}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new U(t);return e?n.scopes.has(e.toLowerCase()):!1}containsScopeSet(e){return!e||e.scopes.size<=0?!1:this.scopes.size>=e.scopes.size&&e.asArray().every(t=>this.containsScope(t))}containsOnlyOIDCScopes(){let e=0;return sr.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(t=>this.appendScope(t))}catch{throw f(oo)}}removeScope(e){if(!e)throw f(ro);this.scopes.delete(e.trim())}removeOIDCScopes(){sr.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw f(Xt);const t=new Set;return e.scopes.forEach(n=>t.add(n.toLowerCase())),this.scopes.forEach(n=>t.add(n.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw f(Xt);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),r=this.getScopeCount();return t.size<r+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):u.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}/*! @azure/msal-common v14.16.0 2024-11-05 */function wt(i,e){if(!i)throw f(Vr);try{const t=e(i);return JSON.parse(t)}catch{throw f(yn)}}function xe(i){if(!i)throw f(yn);const e=i.split(G.CLIENT_INFO_SEPARATOR,2);return{uid:e[0],utid:e.length<2?u.EMPTY_STRING:e[1]}}/*! @azure/msal-common v14.16.0 2024-11-05 */function St(i,e){return!!i&&!!e&&i===e.split(".")[1]}function Pn(i,e,t,n){if(n){const{oid:r,sub:o,tid:s,name:a,tfp:c,acr:h}=n,d=s||c||h||"";return{tenantId:d,localAccountId:r||o||"",name:a,isHomeTenant:St(d,i)}}else return{tenantId:t,localAccountId:e,isHomeTenant:St(t,i)}}function Nn(i,e,t,n){let r=i;if(e){const{isHomeTenant:o,...s}=e;r={...i,...s}}if(t){const{isHomeTenant:o,...s}=Pn(i.homeAccountId,i.localAccountId,i.tenantId,t);return r={...r,...s,idTokenClaims:t,idToken:n},r}return r}/*! @azure/msal-common v14.16.0 2024-11-05 */const Z={Default:0,Adfs:1,Dsts:2,Ciam:3};/*! @azure/msal-common v14.16.0 2024-11-05 */function ko(i){return i&&(i.tid||i.tfp||i.acr)||null}/*! @azure/msal-common v14.16.0 2024-11-05 */const fe={AAD:"AAD",OIDC:"OIDC"};/*! @azure/msal-common v14.16.0 2024-11-05 */class D{generateAccountId(){return[this.homeAccountId,this.environment].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return D.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,n){var h,d,g,m,y,I;const r=new D;t.authorityType===Z.Adfs?r.authorityType=ut.ADFS_ACCOUNT_TYPE:t.protocolMode===fe.AAD?r.authorityType=ut.MSSTS_ACCOUNT_TYPE:r.authorityType=ut.GENERIC_ACCOUNT_TYPE;let o;e.clientInfo&&n&&(o=wt(e.clientInfo,n)),r.clientInfo=e.clientInfo,r.homeAccountId=e.homeAccountId,r.nativeAccountId=e.nativeAccountId;const s=e.environment||t&&t.getPreferredCache();if(!s)throw f(In);r.environment=s,r.realm=(o==null?void 0:o.utid)||ko(e.idTokenClaims)||"",r.localAccountId=(o==null?void 0:o.uid)||((h=e.idTokenClaims)==null?void 0:h.oid)||((d=e.idTokenClaims)==null?void 0:d.sub)||"";const a=((g=e.idTokenClaims)==null?void 0:g.preferred_username)||((m=e.idTokenClaims)==null?void 0:m.upn),c=(y=e.idTokenClaims)!=null&&y.emails?e.idTokenClaims.emails[0]:null;if(r.username=a||c||"",r.name=((I=e.idTokenClaims)==null?void 0:I.name)||"",r.cloudGraphHostName=e.cloudGraphHostName,r.msGraphHost=e.msGraphHost,e.tenantProfiles)r.tenantProfiles=e.tenantProfiles;else{const v=Pn(e.homeAccountId,r.localAccountId,r.realm,e.idTokenClaims);r.tenantProfiles=[v]}return r}static createFromAccountInfo(e,t,n){var o;const r=new D;return r.authorityType=e.authorityType||ut.GENERIC_ACCOUNT_TYPE,r.homeAccountId=e.homeAccountId,r.localAccountId=e.localAccountId,r.nativeAccountId=e.nativeAccountId,r.realm=e.tenantId,r.environment=e.environment,r.username=e.username,r.name=e.name,r.cloudGraphHostName=t,r.msGraphHost=n,r.tenantProfiles=Array.from(((o=e.tenantProfiles)==null?void 0:o.values())||[]),r}static generateHomeAccountId(e,t,n,r,o){if(!(t===Z.Adfs||t===Z.Dsts)){if(e)try{const s=wt(e,r.base64Decode);if(s.uid&&s.utid)return`${s.uid}.${s.utid}`}catch{}n.warning("No client info in response")}return(o==null?void 0:o.sub)||""}static isAccountEntity(e){return e?e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"):!1}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let r=!0;if(n){const o=e.idTokenClaims||{},s=t.idTokenClaims||{};r=o.iat===s.iat&&o.nonce===s.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&r}}/*! @azure/msal-common v14.16.0 2024-11-05 */function bo(i){return i.startsWith("#/")?i.substring(2):i.startsWith("#")||i.startsWith("?")?i.substring(1):i}function _t(i){if(!i||i.indexOf("=")<0)return null;try{const e=bo(i),t=Object.fromEntries(new URLSearchParams(e));if(t.code||t.error||t.error_description||t.state)return t}catch{throw f(Jr)}return null}/*! @azure/msal-common v14.16.0 2024-11-05 */class S{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw b(mo);e.includes("#")||(this._urlString=S.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return ee.endsWith(t,"?")?t=t.slice(0,-1):ee.endsWith(t,"?/")&&(t=t.slice(0,-2)),ee.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch{throw b(Je)}if(!e.HostNameAndPort||!e.PathSegments)throw b(Je);if(!e.Protocol||e.Protocol.toLowerCase()!=="https:")throw b(po)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return S.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return e&&n.length!==0&&(n[0]===Ee.COMMON||n[0]===Ee.ORGANIZATIONS)&&(n[0]=e),S.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw b(Je);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let r=n.AbsolutePath.split("/");return r=r.filter(o=>o&&o.length>0),n.PathSegments=r,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw b(Je);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===u.FORWARD_SLASH){const r=new S(t).getUrlComponents();return r.Protocol+"//"+r.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new S(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!_t(e)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const Oo={endpointMetadata:{"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},instanceDiscoveryMetadata:{metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},Cr=Oo.endpointMetadata,Mn=Oo.instanceDiscoveryMetadata,Po=new Set;Mn.metadata.forEach(i=>{i.aliases.forEach(e=>{Po.add(e)})});function Os(i,e){var r;let t;const n=i.canonicalAuthority;if(n){const o=new S(n).getUrlComponents().HostNameAndPort;t=yr(o,(r=i.cloudDiscoveryMetadata)==null?void 0:r.metadata,z.CONFIG,e)||yr(o,Mn.metadata,z.HARDCODED_VALUES,e)||i.knownAuthorities}return t||[]}function yr(i,e,t,n){if(n==null||n.trace(`getAliasesFromMetadata called with source: ${t}`),i&&e){const r=Rt(e,i);if(r)return n==null||n.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${t}, returning aliases`),r.aliases;n==null||n.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${t}`)}return null}function Ps(i){return Rt(Mn.metadata,i)}function Rt(i,e){for(let t=0;t<i.length;t++){const n=i[t];if(n.aliases.includes(e))return n}return null}/*! @azure/msal-common v14.16.0 2024-11-05 */const No="cache_quota_exceeded",Un="cache_error_unknown";/*! @azure/msal-common v14.16.0 2024-11-05 */const Vt={[No]:"Exceeded cache storage capacity.",[Un]:"Unexpected error occurred when using cache storage."};class Be extends Error{constructor(e,t){const n=t||(Vt[e]?Vt[e]:Vt[Un]);super(`${e}: ${n}`),Object.setPrototypeOf(this,Be.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=n}}/*! @azure/msal-common v14.16.0 2024-11-05 */class ze{constructor(e,t,n,r){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(lo,wn),this.staticAuthorityOptions=r}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort(r=>r.idTokenClaims?-1:1)[0]:t.length===1?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(n=>this.getTenantProfilesFromAccountEntity(n,t==null?void 0:t.tenantId,t))}getTenantedAccountInfoByFilter(e,t,n,r){let o=null,s;if(r&&!this.tenantProfileMatchesFilter(n,r))return null;const a=this.getIdToken(e,t,n.tenantId);return a&&(s=Ne(a.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(s,r))?null:(o=Nn(e,n,s,a==null?void 0:a.secret),o)}getTenantProfilesFromAccountEntity(e,t,n){const r=e.getAccountInfo();let o=r.tenantProfiles||new Map;const s=this.getTokenKeys();if(t){const c=o.get(t);if(c)o=new Map([[t,c]]);else return[]}const a=[];return o.forEach(c=>{const h=this.getTenantedAccountInfoByFilter(r,s,c,n);h&&a.push(h)}),a}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||t.isHomeTenant!==void 0&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!(t&&(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId)||t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint)||t.username&&!this.matchUsername(e.preferred_username,t.username)||t.name&&!this.matchName(e,t.name)||t.sid&&!this.matchSid(e,t.sid)))}async saveCacheRecord(e,t,n){var r,o,s,a;if(!e)throw f(io);try{e.account&&this.setAccount(e.account),e.idToken&&(t==null?void 0:t.idToken)!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&(t==null?void 0:t.accessToken)!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&(t==null?void 0:t.refreshToken)!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(c){throw(r=this.commonLogger)==null||r.error("CacheManager.saveCacheRecord: failed"),c instanceof Error?((o=this.commonLogger)==null||o.errorPii(`CacheManager.saveCacheRecord: ${c.message}`,n),c.name==="QuotaExceededError"||c.name==="NS_ERROR_DOM_QUOTA_REACHED"||c.message.includes("exceeded the quota")?((s=this.commonLogger)==null||s.error("CacheManager.saveCacheRecord: exceeded storage quota",n),new Be(No)):new Be(c.name,c.message)):((a=this.commonLogger)==null||a.errorPii(`CacheManager.saveCacheRecord: ${c}`,n),new Be(Un))}}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),r=U.fromString(e.target),o=[];n.accessToken.forEach(s=>{if(!this.accessTokenKeyMatchesFilter(s,t,!1))return;const a=this.getAccessTokenCredential(s);a&&this.credentialMatchesFilter(a,t)&&U.fromString(a.target).intersectingScopeSets(r)&&o.push(this.removeAccessToken(s))}),await Promise.all(o),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),n=[];return t.forEach(r=>{var c;if(!this.isAccountKey(r,e.homeAccountId))return;const o=this.getAccount(r,this.commonLogger);if(!o||e.homeAccountId&&!this.matchHomeAccountId(o,e.homeAccountId)||e.username&&!this.matchUsername(o.username,e.username)||e.environment&&!this.matchEnvironment(o,e.environment)||e.realm&&!this.matchRealm(o,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(o,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(o,e.authorityType))return;const s={localAccountId:e==null?void 0:e.localAccountId,name:e==null?void 0:e.name},a=(c=o.tenantProfiles)==null?void 0:c.filter(h=>this.tenantProfileMatchesFilter(h,s));a&&a.length===0||n.push(o)}),n}isAccountKey(e,t,n){return!(e.split(G.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||n&&!e.toLowerCase().includes(n.toLowerCase()))}isCredentialKey(e){if(e.split(G.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(t.indexOf(E.ID_TOKEN.toLowerCase())===-1&&t.indexOf(E.ACCESS_TOKEN.toLowerCase())===-1&&t.indexOf(E.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())===-1&&t.indexOf(E.REFRESH_TOKEN.toLowerCase())===-1)return!1;if(t.indexOf(E.REFRESH_TOKEN.toLowerCase())>-1){const n=`${E.REFRESH_TOKEN}${G.CACHE_KEY_SEPARATOR}${this.clientId}${G.CACHE_KEY_SEPARATOR}`,r=`${E.REFRESH_TOKEN}${G.CACHE_KEY_SEPARATOR}${et}${G.CACHE_KEY_SEPARATOR}`;if(t.indexOf(n.toLowerCase())===-1&&t.indexOf(r.toLowerCase())===-1)return!1}else if(t.indexOf(this.clientId.toLowerCase())===-1)return!1;return!0}credentialMatchesFilter(e,t){return!(t.clientId&&!this.matchClientId(e,t.clientId)||t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash)||typeof t.homeAccountId=="string"&&!this.matchHomeAccountId(e,t.homeAccountId)||t.environment&&!this.matchEnvironment(e,t.environment)||t.realm&&!this.matchRealm(e,t.realm)||t.credentialType&&!this.matchCredentialType(e,t.credentialType)||t.familyId&&!this.matchFamilyId(e,t.familyId)||t.target&&!this.matchTarget(e,t.target)||(t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash||e.credentialType===E.ACCESS_TOKEN_WITH_AUTH_SCHEME&&(t.tokenType&&!this.matchTokenType(e,t.tokenType)||t.tokenType===R.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){const t=this.getKeys(),n={};return t.forEach(r=>{if(!this.isAppMetadata(r))return;const o=this.getAppMetadata(r);o&&(e.environment&&!this.matchEnvironment(o,e.environment)||e.clientId&&!this.matchClientId(o,e.clientId)||(n[r]=o))}),n}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach(r=>{if(!this.isAuthorityMetadata(r)||r.indexOf(this.clientId)===-1)return;const o=this.getAuthorityMetadata(r);o&&o.aliases.indexOf(e)!==-1&&(n=o)}),n}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach(n=>{t.push(this.removeAccount(n))}),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),n=e.generateAccountId(),r=[];t.idToken.forEach(o=>{o.indexOf(n)===0&&this.removeIdToken(o)}),t.accessToken.forEach(o=>{o.indexOf(n)===0&&r.push(this.removeAccessToken(o))}),t.refreshToken.forEach(o=>{o.indexOf(n)===0&&this.removeRefreshToken(o)}),await Promise.all(r)}updateOutdatedCachedAccount(e,t,n){var r;if(t&&t.isSingleTenant()){(r=this.commonLogger)==null||r.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const o=this.getAccountKeys().filter(d=>d.startsWith(t.homeAccountId)),s=[];o.forEach(d=>{const g=this.getCachedAccountEntity(d);g&&s.push(g)});const a=s.find(d=>St(d.realm,d.homeAccountId))||s[0];a.tenantProfiles=s.map(d=>({tenantId:d.realm,localAccountId:d.localAccountId,name:d.name,isHomeTenant:St(d.realm,d.homeAccountId)}));const c=ze.toObject(new D,{...a}),h=c.generateAccountKey();return o.forEach(d=>{d!==h&&this.removeOutdatedAccount(e)}),this.setAccount(c),n==null||n.verbose("Updated an outdated account entity in the cache"),c}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===E.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===R.POP){const r=t.keyId;if(r)try{await this.cryptoImpl.removeTokenBindingKey(r)}catch{throw f(co)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(t=>{this.isAppMetadata(t)&&this.removeItem(t)}),!0}readAccountFromCache(e){const t=D.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,n,r,o){this.commonLogger.trace("CacheManager - getIdToken called");const s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:E.ID_TOKEN,clientId:this.clientId,realm:n},a=this.getIdTokensByFilter(s,t),c=a.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let h=a;if(!n){const d=new Map;a.forEach((m,y)=>{m.realm===e.tenantId&&d.set(y,m)});const g=d.size;if(g<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),a.values().next().value;if(g===1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),d.values().next().value;h=d}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),h.forEach((d,g)=>{this.removeIdToken(g)}),r&&o&&r.addFields({multiMatchedID:a.size},o),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),a.values().next().value}getIdTokensByFilter(e,t){const n=t&&t.idToken||this.getTokenKeys().idToken,r=new Map;return n.forEach(o=>{if(!this.idTokenKeyMatchesFilter(o,{clientId:this.clientId,...e}))return;const s=this.getIdTokenCredential(o);s&&this.credentialMatchesFilter(s,e)&&r.set(o,s)}),r}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,n,r,o,s){this.commonLogger.trace("CacheManager - getAccessToken called");const a=U.createSearchScopes(t.scopes),c=t.authenticationScheme||R.BEARER,h=c.toLowerCase()!==R.BEARER.toLowerCase()?E.ACCESS_TOKEN_WITH_AUTH_SCHEME:E.ACCESS_TOKEN,d={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:h,clientId:this.clientId,realm:r||e.tenantId,target:a,tokenType:c,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},g=n&&n.accessToken||this.getTokenKeys().accessToken,m=[];g.forEach(I=>{if(this.accessTokenKeyMatchesFilter(I,d,!0)){const v=this.getAccessTokenCredential(I);v&&this.credentialMatchesFilter(v,d)&&m.push(v)}});const y=m.length;return y<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):y>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),m.forEach(I=>{this.removeAccessToken(Ke(I))}),o&&s&&o.addFields({multiMatchedAT:m.length},s),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),m[0])}accessTokenKeyMatchesFilter(e,t,n){const r=e.toLowerCase();if(t.clientId&&r.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&r.indexOf(t.homeAccountId.toLowerCase())===-1||t.realm&&r.indexOf(t.realm.toLowerCase())===-1||t.requestedClaimsHash&&r.indexOf(t.requestedClaimsHash.toLowerCase())===-1)return!1;if(t.target){const o=t.target.asArray();for(let s=0;s<o.length;s++){if(n&&!r.includes(o[s].toLowerCase()))return!1;if(!n&&r.includes(o[s].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),n=[];return t.accessToken.forEach(r=>{if(!this.accessTokenKeyMatchesFilter(r,e,!0))return;const o=this.getAccessTokenCredential(r);o&&this.credentialMatchesFilter(o,e)&&n.push(o)}),n}getRefreshToken(e,t,n,r,o){this.commonLogger.trace("CacheManager - getRefreshToken called");const s=t?et:void 0,a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:E.REFRESH_TOKEN,clientId:this.clientId,familyId:s},c=n&&n.refreshToken||this.getTokenKeys().refreshToken,h=[];c.forEach(g=>{if(this.refreshTokenKeyMatchesFilter(g,a)){const m=this.getRefreshTokenCredential(g);m&&this.credentialMatchesFilter(m,a)&&h.push(m)}});const d=h.length;return d<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(d>1&&r&&o&&r.addFields({multiMatchedRT:d},o),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),h[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&n.indexOf(t.familyId.toLowerCase())===-1||!t.familyId&&t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),r=Object.keys(n).map(s=>n[s]),o=r.length;if(o<1)return null;if(o>1)throw f(to);return r[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!!(t&&t.familyId===et)}matchHomeAccountId(e,t){return typeof e.homeAccountId=="string"&&t===e.homeAccountId}matchLocalAccountIdFromTokenClaims(e,t){const n=e.oid||e.sub;return t===n}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){var n;return t.toLowerCase()===((n=e.name)==null?void 0:n.toLowerCase())}matchUsername(e,t){return!!(e&&typeof e=="string"&&(t==null?void 0:t.toLowerCase())===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const r=Os(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){var n;return((n=e.realm)==null?void 0:n.toLowerCase())===t.toLowerCase()}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return e.credentialType!==E.ACCESS_TOKEN&&e.credentialType!==E.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target?!1:U.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return e.indexOf(mn)!==-1}isAuthorityMetadata(e){return e.indexOf(Et.CACHE_KEY)!==-1}generateAuthorityMetadataCacheKey(e){return`${Et.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class Ns extends ze{setAccount(){throw f(w)}getAccount(){throw f(w)}getCachedAccountEntity(){throw f(w)}setIdTokenCredential(){throw f(w)}getIdTokenCredential(){throw f(w)}setAccessTokenCredential(){throw f(w)}getAccessTokenCredential(){throw f(w)}setRefreshTokenCredential(){throw f(w)}getRefreshTokenCredential(){throw f(w)}setAppMetadata(){throw f(w)}getAppMetadata(){throw f(w)}setServerTelemetry(){throw f(w)}getServerTelemetry(){throw f(w)}setAuthorityMetadata(){throw f(w)}getAuthorityMetadata(){throw f(w)}getAuthorityMetadataKeys(){throw f(w)}setThrottlingCache(){throw f(w)}getThrottlingCache(){throw f(w)}removeItem(){throw f(w)}getKeys(){throw f(w)}getAccountKeys(){throw f(w)}getTokenKeys(){throw f(w)}updateCredentialCacheKey(){throw f(w)}removeOutdatedAccount(){throw f(w)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const Mo={tokenRenewalOffsetSeconds:es,preventCorsPreflight:!1},Ms={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:P.Info,correlationId:u.EMPTY_STRING},Us={claimsBasedCachingEnabled:!1},Ls={async sendGetRequestAsync(){throw f(w)},async sendPostRequestAsync(){throw f(w)}},Ds={sku:u.SKU,version:wn,cpu:u.EMPTY_STRING,os:u.EMPTY_STRING},Hs={clientSecret:u.EMPTY_STRING,clientAssertion:void 0},Ks={azureCloudInstance:Sn.None,tenant:`${u.DEFAULT_COMMON_TENANT}`},xs={application:{appName:"",appVersion:""}};function Fs({authOptions:i,systemOptions:e,loggerOptions:t,cacheOptions:n,storageInterface:r,networkInterface:o,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:h,serverTelemetryManager:d,persistencePlugin:g,serializableCache:m}){const y={...Ms,...t};return{authOptions:Bs(i),systemOptions:{...Mo,...e},loggerOptions:y,cacheOptions:{...Us,...n},storageInterface:r||new Ns(i.clientId,vt,new Ie(y)),networkInterface:o||Ls,cryptoInterface:s||vt,clientCredentials:a||Hs,libraryInfo:{...Ds,...c},telemetry:{...xs,...h},serverTelemetryManager:d||null,persistencePlugin:g||null,serializableCache:m||null}}function Bs(i){return{clientCapabilities:[],azureCloudOptions:Ks,skipAuthorityMetadataCache:!1,instanceAware:!1,...i}}function rn(i){return i.authOptions.authority.options.protocolMode===fe.OIDC}/*! @azure/msal-common v14.16.0 2024-11-05 */const W={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"};/*! @azure/msal-common v14.16.0 2024-11-05 */const ke="client_id",Uo="redirect_uri",Tr="response_type",Gs="response_mode",qs="grant_type",$s="claims",zs="scope",Qs="refresh_token",Vs="state",Ys="nonce",js="prompt",Ws="code",Js="code_challenge",Xs="code_challenge_method",Zs="code_verifier",ea="client-request-id",ta="x-client-SKU",na="x-client-VER",ra="x-client-OS",oa="x-client-CPU",ia="x-client-current-telemetry",sa="x-client-last-telemetry",aa="x-ms-lib-capability",ca="x-app-name",ha="x-app-ver",da="post_logout_redirect_uri",la="id_token_hint",ua="device_code",ga="client_secret",fa="client_assertion",pa="client_assertion_type",Ar="token_type",Er="req_cnf",ma="assertion",Ca="requested_token_use",Ir="return_spa_code",ya="nativebroker",Ta="logout_hint",Aa="sid",Ea="login_hint",Ia="domain_hint",va="x-client-xtra-sku",Ln="brk_client_id",on="brk_redirect_uri";/*! @azure/msal-common v14.16.0 2024-11-05 */class Le{static validateRedirectUri(e){if(!e)throw b(fo)}static validatePrompt(e){const t=[];for(const n in K)t.push(K[n]);if(t.indexOf(e)<0)throw b(yo)}static validateClaims(e){try{JSON.parse(e)}catch{throw b(Rn)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw b(kn);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([ar.PLAIN,ar.S256].indexOf(e)<0)throw b(Eo)}}/*! @azure/msal-common v14.16.0 2024-11-05 */function wa(i,e,t){if(!e)return;const n=i.get(ke);n&&i.has(Ln)&&(t==null||t.addFields({embeddedClientId:n,embeddedRedirectUri:i.get(Uo)},e))}class nt{constructor(e,t){this.parameters=new Map,this.performanceClient=t,this.correlationId=e}addResponseTypeCode(){this.parameters.set(Tr,encodeURIComponent(u.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(Tr,encodeURIComponent(`${u.TOKEN_RESPONSE_TYPE} ${u.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set(Gs,encodeURIComponent(e||Ji.QUERY))}addNativeBroker(){this.parameters.set(ya,encodeURIComponent("1"))}addScopes(e,t=!0,n=je){t&&!n.includes("openid")&&!e.includes("openid")&&n.push("openid");const r=t?[...e||[],...n]:e||[],o=new U(r);this.parameters.set(zs,encodeURIComponent(o.printScopes()))}addClientId(e){this.parameters.set(ke,encodeURIComponent(e))}addRedirectUri(e){Le.validateRedirectUri(e),this.parameters.set(Uo,encodeURIComponent(e))}addPostLogoutRedirectUri(e){Le.validateRedirectUri(e),this.parameters.set(da,encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set(la,encodeURIComponent(e))}addDomainHint(e){this.parameters.set(Ia,encodeURIComponent(e))}addLoginHint(e){this.parameters.set(Ea,encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(q.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(q.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set(Aa,encodeURIComponent(e))}addClaims(e,t){const n=this.addClientCapabilitiesToClaims(e,t);Le.validateClaims(n),this.parameters.set($s,encodeURIComponent(n))}addCorrelationId(e){this.parameters.set(ea,encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set(ta,e.sku),this.parameters.set(na,e.version),e.os&&this.parameters.set(ra,e.os),e.cpu&&this.parameters.set(oa,e.cpu)}addApplicationTelemetry(e){e!=null&&e.appName&&this.parameters.set(ca,e.appName),e!=null&&e.appVersion&&this.parameters.set(ha,e.appVersion)}addPrompt(e){Le.validatePrompt(e),this.parameters.set(`${js}`,encodeURIComponent(e))}addState(e){e&&this.parameters.set(Vs,encodeURIComponent(e))}addNonce(e){this.parameters.set(Ys,encodeURIComponent(e))}addCodeChallengeParams(e,t){if(Le.validateCodeChallengeParams(e,t),e&&t)this.parameters.set(Js,encodeURIComponent(e)),this.parameters.set(Xs,encodeURIComponent(t));else throw b(kn)}addAuthorizationCode(e){this.parameters.set(Ws,encodeURIComponent(e))}addDeviceCode(e){this.parameters.set(ua,encodeURIComponent(e))}addRefreshToken(e){this.parameters.set(Qs,encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set(Zs,encodeURIComponent(e))}addClientSecret(e){this.parameters.set(ga,encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set(fa,encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set(pa,encodeURIComponent(e))}addOboAssertion(e){this.parameters.set(ma,encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set(Ca,encodeURIComponent(e))}addGrantType(e){this.parameters.set(qs,encodeURIComponent(e))}addClientInfo(){this.parameters.set(Xi,"1")}addExtraQueryParameters(e){Object.entries(e).forEach(([t,n])=>{!this.parameters.has(t)&&n&&this.parameters.set(t,n)})}addClientCapabilitiesToClaims(e,t){let n;if(!e)n={};else try{n=JSON.parse(e)}catch{throw b(Rn)}return t&&t.length>0&&(n.hasOwnProperty(lt.ACCESS_TOKEN)||(n[lt.ACCESS_TOKEN]={}),n[lt.ACCESS_TOKEN][lt.XMS_CC]={values:t}),JSON.stringify(n)}addUsername(e){this.parameters.set(hr.username,encodeURIComponent(e))}addPassword(e){this.parameters.set(hr.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(Ar,R.POP),this.parameters.set(Er,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(Ar,R.SSH),this.parameters.set(Er,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set(ia,e.generateCurrentRequestHeaderValue()),this.parameters.set(sa,e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set(aa,tt.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set(Ta,encodeURIComponent(e))}addBrokerParameters(e){const t={};t[Ln]=e.brokerClientId,t[on]=e.brokerRedirectUri,this.addExtraQueryParameters(t)}createQueryString(){const e=new Array;return this.parameters.forEach((t,n)=>{e.push(`${n}=${t}`)}),wa(this.parameters,this.correlationId,this.performanceClient),e.join("&")}}/*! @azure/msal-common v14.16.0 2024-11-05 */function Sa(i){return i.hasOwnProperty("authorization_endpoint")&&i.hasOwnProperty("token_endpoint")&&i.hasOwnProperty("issuer")&&i.hasOwnProperty("jwks_uri")}/*! @azure/msal-common v14.16.0 2024-11-05 */function _a(i){return i.hasOwnProperty("tenant_discovery_endpoint")&&i.hasOwnProperty("metadata")}/*! @azure/msal-common v14.16.0 2024-11-05 */function Ra(i){return i.hasOwnProperty("error")&&i.hasOwnProperty("error_description")}/*! @azure/msal-common v14.16.0 2024-11-05 */const l={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",NetworkClientSendPostRequestAsync:"networkClientSendPostRequestAsync",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},ka={InProgress:1};/*! @azure/msal-common v14.16.0 2024-11-05 */const Me=(i,e,t,n,r)=>(...o)=>{t.trace(`Executing function ${e}`);const s=n==null?void 0:n.startMeasurement(e,r);if(r){const a=e+"CallCount";n==null||n.incrementFields({[a]:1},r)}try{const a=i(...o);return s==null||s.end({success:!0}),t.trace(`Returning result from ${e}`),a}catch(a){t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(a))}catch{t.trace("Unable to print error message.")}throw s==null||s.end({success:!1},a),a}},p=(i,e,t,n,r)=>(...o)=>{t.trace(`Executing function ${e}`);const s=n==null?void 0:n.startMeasurement(e,r);if(r){const a=e+"CallCount";n==null||n.incrementFields({[a]:1},r)}return n==null||n.setPreQueueTime(e,r),i(...o).then(a=>(t.trace(`Returning result from ${e}`),s==null||s.end({success:!0}),a)).catch(a=>{t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(a))}catch{t.trace("Unable to print error message.")}throw s==null||s.end({success:!1},a),a})};/*! @azure/msal-common v14.16.0 2024-11-05 */class Lt{constructor(e,t,n,r){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=r}async detectRegion(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(l.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=Ue.ENVIRONMENT_VARIABLE;else{const o=Lt.IMDS_OPTIONS;try{const s=await p(this.getRegionFromIMDS.bind(this),l.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(u.IMDS_VERSION,o);if(s.status===gt.httpSuccess&&(n=s.body,t.region_source=Ue.IMDS),s.status===gt.httpBadRequest){const a=await p(this.getCurrentVersion.bind(this),l.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(o);if(!a)return t.region_source=Ue.FAILED_AUTO_DETECTION,null;const c=await p(this.getRegionFromIMDS.bind(this),l.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(a,o);c.status===gt.httpSuccess&&(n=c.body,t.region_source=Ue.IMDS)}}catch{return t.region_source=Ue.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=Ue.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){var n;return(n=this.performanceClient)==null||n.addQueueMeasurement(l.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${u.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,u.IMDS_TIMEOUT)}async getCurrentVersion(e){var t;(t=this.performanceClient)==null||t.addQueueMeasurement(l.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const n=await this.networkInterface.sendGetRequestAsync(`${u.IMDS_ENDPOINT}?format=json`,e);return n.status===gt.httpBadRequest&&n.body&&n.body["newest-versions"]&&n.body["newest-versions"].length>0?n.body["newest-versions"][0]:null}catch{return null}}}Lt.IMDS_OPTIONS={headers:{Metadata:"true"}};/*! @azure/msal-common v14.16.0 2024-11-05 */class B{constructor(e,t,n,r,o,s,a,c){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=r,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=a,this.correlationId=s,this.managedIdentity=c||!1,this.regionDiscovery=new Lt(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(u.CIAM_AUTH_URL))return Z.Ciam;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case u.ADFS:return Z.Adfs;case u.DSTS:return Z.Dsts}return Z.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new S(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw f(le)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw f(le)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw f(le)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw f(ho);return this.replacePath(this.metadata.end_session_endpoint)}else throw f(le)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw f(le)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw f(le)}canReplaceTenant(e){return e.PathSegments.length===1&&!B.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===Z.Default&&this.protocolMode===fe.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const r=new S(this.metadata.canonical_authority).getUrlComponents(),o=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((a,c)=>{let h=o[c];if(c===0&&this.canReplaceTenant(r)){const d=new S(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];h!==d&&(this.logger.verbose(`Replacing tenant domain name ${h} with id ${d}`),h=d)}a!==h&&(t=t.replace(`/${h}/`,`/${a}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===Z.Adfs||this.protocolMode!==fe.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){var r,o;(r=this.performanceClient)==null||r.addQueueMeasurement(l.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await p(this.updateCloudDiscoveryMetadata.bind(this),l.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await p(this.updateEndpointMetadata.bind(this),l.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n}),(o=this.performanceClient)==null||o.addFields({cloudDiscoverySource:t,authorityEndpointSource:n},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:pr(),jwks_uri:""}),e}updateCachedMetadata(e,t,n){t!==z.CACHE&&(n==null?void 0:n.source)!==z.CACHE&&(e.expiresAt=pr(),e.canonical_authority=this.canonicalAuthority);const r=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(r,e),this.metadata=e}async updateEndpointMetadata(e){var r,o,s;(r=this.performanceClient)==null||r.addQueueMeasurement(l.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===z.HARDCODED_VALUES&&(o=this.authorityOptions.azureRegionConfiguration)!=null&&o.azureRegion&&t.metadata){const a=await p(this.updateMetadataWithRegionalInformation.bind(this),l.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata);ft(e,a,!1),e.canonical_authority=this.canonicalAuthority}return t.source}let n=await p(this.getEndpointMetadataFromNetwork.bind(this),l.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return(s=this.authorityOptions.azureRegionConfiguration)!=null&&s.azureRegion&&(n=await p(this.updateMetadataWithRegionalInformation.bind(this),l.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(n)),ft(e,n,!0),z.NETWORK;throw f(Wr,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),ft(e,t,!1),{source:z.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const r=this.getEndpointMetadataFromHardcodedValues();if(r)return ft(e,r,!1),{source:z.HARDCODED_VALUES,metadata:r};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=mr(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:z.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new S(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch{throw b(Io)}return null}async getEndpointMetadataFromNetwork(){var n;(n=this.performanceClient)==null||n.addQueueMeasurement(l.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const r=await this.networkInterface.sendGetRequestAsync(t,e);return Sa(r.body)?r.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(r){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${r}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in Cr?Cr[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){var n,r,o;(n=this.performanceClient)==null||n.addQueueMeasurement(l.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=(r=this.authorityOptions.azureRegionConfiguration)==null?void 0:r.azureRegion;if(t){if(t!==u.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=zt.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,B.replaceWithRegionalInformation(e,t);const s=await p(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),l.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)((o=this.authorityOptions.azureRegionConfiguration)==null?void 0:o.environmentRegion,this.regionDiscoveryMetadata);if(s)return this.regionDiscoveryMetadata.region_outcome=zt.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=s,B.replaceWithRegionalInformation(e,s);this.regionDiscoveryMetadata.region_outcome=zt.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(l.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await p(this.getCloudDiscoveryMetadataFromNetwork.bind(this),l.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return Qt(e,n,!0),z.NETWORK;throw b(vo)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||u.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||u.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||u.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),Qt(e,t,!1),z.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const r=Ps(this.hostnameAndPort);if(r)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),Qt(e,r,!1),z.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const n=mr(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),z.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===Z.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),B.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=Rt(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch{throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),b(bn)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),B.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(l.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${u.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const o=await this.networkInterface.sendGetRequestAsync(e,t);let s,a;if(_a(o.body))s=o.body,a=s.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${s.tenant_discovery_endpoint}`);else if(Ra(o.body)){if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${o.status}`),s=o.body,s.error===u.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${s.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${s.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),a=[]}else return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=Rt(a,this.hostnameAndPort)}catch(o){if(o instanceof N)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${o.errorCode}
Error Description: ${o.errorMessage}`);else{const s=o;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${s.name}
Error Description: ${s.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=B.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(t=>t&&S.getDomainFromUrl(t).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==Sn.None){const r=t.tenant?t.tenant:u.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${r}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return u.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw f(le)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Po.has(e)}static isPublicCloudAuthority(e){return u.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const r=new S(e);r.validateAsUri();const o=r.getUrlComponents();let s=`${t}.${o.HostNameAndPort}`;this.isPublicCloudAuthority(o.HostNameAndPort)&&(s=`${t}.${u.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const a=S.constructAuthorityUriFromObject({...r.getUrlComponents(),HostNameAndPort:s}).urlString;return n?`${a}?${n}`:a}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=B.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=B.buildRegionalAuthorityString(n.token_endpoint,t),n.end_session_endpoint&&(n.end_session_endpoint=B.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const r=new S(e).getUrlComponents();if(r.PathSegments.length===0&&r.HostNameAndPort.endsWith(u.CIAM_AUTH_URL)){const o=r.HostNameAndPort.split(".")[0];t=`${t}${o}${u.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}B.reservedTenantDomains=new Set(["{tenant}","{tenantid}",Ee.COMMON,Ee.CONSUMERS,Ee.ORGANIZATIONS]);function ba(i){var r;const n=(r=new S(i).getUrlComponents().PathSegments.slice(-1)[0])==null?void 0:r.toLowerCase();switch(n){case Ee.COMMON:case Ee.ORGANIZATIONS:case Ee.CONSUMERS:return;default:return n}}function Lo(i){return i.endsWith(u.FORWARD_SLASH)?i:`${i}${u.FORWARD_SLASH}`}function Oa(i){const e=i.cloudDiscoveryMetadata;let t;if(e)try{t=JSON.parse(e)}catch{throw b(bn)}return{canonicalAuthority:i.authority?Lo(i.authority):void 0,knownAuthorities:i.knownAuthorities,cloudDiscoveryMetadata:t}}/*! @azure/msal-common v14.16.0 2024-11-05 */async function Do(i,e,t,n,r,o,s){s==null||s.addQueueMeasurement(l.AuthorityFactoryCreateDiscoveredInstance,o);const a=B.transformCIAMAuthority(Lo(i)),c=new B(a,e,t,n,r,o,s);try{return await p(c.resolveEndpointsAsync.bind(c),l.AuthorityResolveEndpointsAsync,r,s,o)(),c}catch{throw f(le)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class ve extends N{constructor(e,t,n,r,o){super(e,t,n),this.name="ServerError",this.errorNo=r,this.status=o,Object.setPrototypeOf(this,ve.prototype)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class ie{static generateThrottlingStorageKey(e){return`${tt.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){var o;const n=ie.generateThrottlingStorageKey(t),r=e.getThrottlingCache(n);if(r){if(r.throttleTime<Date.now()){e.removeItem(n);return}throw new ve(((o=r.errorCodes)==null?void 0:o.join(" "))||u.EMPTY_STRING,r.errorMessage,r.subError)}}static postProcess(e,t,n){if(ie.checkResponseStatus(n)||ie.checkResponseForRetryAfter(n)){const r={throttleTime:ie.calculateThrottleTime(parseInt(n.headers[q.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(ie.generateThrottlingStorageKey(t),r)}}static checkResponseStatus(e){return e.status===429||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return e.headers?e.headers.hasOwnProperty(q.RETRY_AFTER)&&(e.status<200||e.status>=300):!1}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(Math.min(n+(t||tt.DEFAULT_THROTTLE_TIME_SECONDS),n+tt.DEFAULT_MAX_THROTTLE_TIME_SECONDS)*1e3)}static removeThrottle(e,t,n,r){const o={clientId:t,authority:n.authority,scopes:n.scopes,homeAccountIdentifier:r,claims:n.claims,authenticationScheme:n.authenticationScheme,resourceRequestMethod:n.resourceRequestMethod,resourceRequestUri:n.resourceRequestUri,shrClaims:n.shrClaims,sshKid:n.sshKid},s=this.generateThrottlingStorageKey(o);e.removeItem(s)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class Dt extends N{constructor(e,t,n){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,Dt.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=n}}function vr(i,e,t){return new Dt(i,e,t)}/*! @azure/msal-common v14.16.0 2024-11-05 */class Dn{constructor(e,t){this.config=Fs(e),this.logger=new Ie(this.config.loggerOptions,lo,wn),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[q.CONTENT_TYPE]=u.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case W.HOME_ACCOUNT_ID:try{const n=xe(e.credential);t[q.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case W.UPN:t[q.CCS_HEADER]=`UPN: ${e.credential}`;break}return t}async executePostToTokenEndpoint(e,t,n,r,o,s){var c;s&&((c=this.performanceClient)==null||c.addQueueMeasurement(s,o));const a=await this.sendPostRequest(r,e,{body:t,headers:n},o);return this.config.serverTelemetryManager&&a.status<500&&a.status!==429&&this.config.serverTelemetryManager.clearTelemetryCache(),a}async sendPostRequest(e,t,n,r){var s,a,c;ie.preProcess(this.cacheManager,e);let o;try{o=await p(this.networkClient.sendPostRequestAsync.bind(this.networkClient),l.NetworkClientSendPostRequestAsync,this.logger,this.performanceClient,r)(t,n);const h=o.headers||{};(a=this.performanceClient)==null||a.addFields({refreshTokenSize:((s=o.body.refresh_token)==null?void 0:s.length)||0,httpVerToken:h[q.X_MS_HTTP_VERSION]||"",requestId:h[q.X_MS_REQUEST_ID]||""},r)}catch(h){if(h instanceof Dt){const d=h.responseHeaders;throw d&&((c=this.performanceClient)==null||c.addFields({httpVerToken:d[q.X_MS_HTTP_VERSION]||"",requestId:d[q.X_MS_REQUEST_ID]||"",contentTypeHeader:d[q.CONTENT_TYPE]||void 0,contentLengthHeader:d[q.CONTENT_LENGTH]||void 0,httpStatus:h.httpStatus},r)),h.error}throw h instanceof N?h:f(jr)}return ie.postProcess(this.cacheManager,e,o),o}async updateAuthority(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(l.UpdateTokenEndpointAuthority,t);const n=`https://${e}/${this.authority.tenant}/`,r=await Do(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=r}createTokenQueryParameters(e){const t=new nt(e.correlationId,this.performanceClient);return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.addCorrelationId(e.correlationId),t.createQueryString()}}/*! @azure/msal-common v14.16.0 2024-11-05 */const kt="no_tokens_found",Ho="native_account_unavailable",Hn="refresh_token_expired",Pa="interaction_required",Na="consent_required",Ma="login_required",Ht="bad_token";/*! @azure/msal-common v14.16.0 2024-11-05 */const wr=[Pa,Na,Ma,Ht],Ua=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],La={[kt]:"No refresh token found in the cache. Please sign-in.",[Ho]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[Hn]:"Refresh token has expired.",[Ht]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};class ne extends N{constructor(e,t,n,r,o,s,a,c){super(e,t,n),Object.setPrototypeOf(this,ne.prototype),this.timestamp=r||u.EMPTY_STRING,this.traceId=o||u.EMPTY_STRING,this.correlationId=s||u.EMPTY_STRING,this.claims=a||u.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function Sr(i,e,t){const n=!!i&&wr.indexOf(i)>-1,r=!!t&&Ua.indexOf(t)>-1,o=!!e&&wr.some(s=>e.indexOf(s)>-1);return n||o||r}function sn(i){return new ne(i,La[i])}/*! @azure/msal-common v14.16.0 2024-11-05 */class te{static setRequestState(e,t,n){const r=te.generateLibraryState(e,n);return t?`${r}${u.RESOURCE_DELIM}${t}`:r}static generateLibraryState(e,t){if(!e)throw f(en);const n={id:e.createNewGuid()};t&&(n.meta=t);const r=JSON.stringify(n);return e.base64Encode(r)}static parseRequestState(e,t){if(!e)throw f(en);if(!t)throw f($e);try{const n=t.split(u.RESOURCE_DELIM),r=n[0],o=n.length>1?n.slice(1).join(u.RESOURCE_DELIM):u.EMPTY_STRING,s=e.base64Decode(r),a=JSON.parse(s);return{userRequestState:o||u.EMPTY_STRING,libraryState:a}}catch{throw f($e)}}}/*! @azure/msal-common v14.16.0 2024-11-05 */const Da={SW:"sw"};class Qe{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(l.PopTokenGenerateCnf,e.correlationId);const n=await p(this.generateKid.bind(this),l.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),r=this.cryptoUtils.base64UrlEncode(JSON.stringify(n));return{kid:n.kid,reqCnfString:r}}async generateKid(e){var n;return(n=this.performanceClient)==null||n.addQueueMeasurement(l.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:Da.SW}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,r){const{resourceRequestMethod:o,resourceRequestUri:s,shrClaims:a,shrNonce:c,shrOptions:h}=n,d=s?new S(s):void 0,g=d==null?void 0:d.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:he(),m:o==null?void 0:o.toUpperCase(),u:g==null?void 0:g.HostNameAndPort,nonce:c||this.cryptoUtils.createNewGuid(),p:g==null?void 0:g.AbsolutePath,q:g!=null&&g.QueryString?[[],g.QueryString]:void 0,client_claims:a||void 0,...r},t,h,n.correlationId)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class Ha{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}/*! @azure/msal-common v14.16.0 2024-11-05 */function Ka(i){var n,r;const e="code=",t=(n=i.error_uri)==null?void 0:n.lastIndexOf(e);return t&&t>=0?(r=i.error_uri)==null?void 0:r.substring(t+e.length):void 0}class be{constructor(e,t,n,r,o,s,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=r,this.serializableCache=o,this.persistencePlugin=s,this.performanceClient=a}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?f(It,"Cached State"):f(It,"Server State");let n,r;try{n=decodeURIComponent(e.state)}catch{throw f($e,e.state)}try{r=decodeURIComponent(t)}catch{throw f($e,e.state)}if(n!==r)throw f(Xr);if(e.error||e.error_description||e.suberror){const o=Ka(e);throw Sr(e.error,e.error_description,e.suberror)?new ne(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",o):new ve(e.error||"",e.error_description,e.suberror,o)}}validateTokenResponse(e,t){var n;if(e.error||e.error_description||e.suberror){const r=`Error(s): ${e.error_codes||u.NOT_AVAILABLE} - Timestamp: ${e.timestamp||u.NOT_AVAILABLE} - Description: ${e.error_description||u.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||u.NOT_AVAILABLE} - Trace ID: ${e.trace_id||u.NOT_AVAILABLE}`,o=(n=e.error_codes)!=null&&n.length?e.error_codes[0]:void 0,s=new ve(e.error,r,e.suberror,o,e.status);if(t&&e.status&&e.status>=dt.SERVER_ERROR_RANGE_START&&e.status<=dt.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${s}`);return}else if(t&&e.status&&e.status>=dt.CLIENT_ERROR_RANGE_START&&e.status<=dt.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${s}`);return}throw Sr(e.error,e.error_description,e.suberror)?new ne(e.error,e.error_description,e.suberror,e.timestamp||u.EMPTY_STRING,e.trace_id||u.EMPTY_STRING,e.correlation_id||u.EMPTY_STRING,e.claims||u.EMPTY_STRING,o):s}}async handleServerTokenResponse(e,t,n,r,o,s,a,c,h){var I;(I=this.performanceClient)==null||I.addQueueMeasurement(l.HandleServerTokenResponse,e.correlation_id);let d;if(e.id_token){if(d=Ne(e.id_token||u.EMPTY_STRING,this.cryptoObj.base64Decode),o&&o.nonce&&d.nonce!==o.nonce)throw f(Zr);if(r.maxAge||r.maxAge===0){const v=d.auth_time;if(!v)throw f(An);uo(v,r.maxAge)}}this.homeAccountIdentifier=D.generateHomeAccountId(e.client_info||u.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,d);let g;o&&o.state&&(g=te.parseRequestState(this.cryptoObj,o.state)),e.key_id=e.key_id||r.sshKid||void 0;const m=this.generateCacheRecord(e,t,n,r,d,s,o);let y;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),y=new Ha(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(y)),a&&!c&&m.account){const v=m.account.generateAccountKey();if(!this.cacheStorage.getAccount(v,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await be.generateAuthenticationResult(this.cryptoObj,t,m,!1,r,d,g,void 0,h)}await this.cacheStorage.saveCacheRecord(m,r.storeInCache,r.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&y&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(y))}return be.generateAuthenticationResult(this.cryptoObj,t,m,!1,r,d,g,e,h)}generateCacheRecord(e,t,n,r,o,s,a){const c=t.getPreferredCache();if(!c)throw f(In);const h=ko(o);let d,g;e.id_token&&o&&(d=Nt(this.homeAccountIdentifier,c,e.id_token,this.clientId,h||""),g=Kn(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,o,e.client_info,c,h,a,void 0,this.logger));let m=null;if(e.access_token){const v=e.scope?U.fromString(e.scope):new U(r.scopes||[]),L=(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,F=(typeof e.ext_expires_in=="string"?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,J=(typeof e.refresh_in=="string"?parseInt(e.refresh_in,10):e.refresh_in)||void 0,me=n+L,ct=me+F,ht=J&&J>0?n+J:void 0;m=Mt(this.homeAccountIdentifier,c,e.access_token,this.clientId,h||t.tenant||"",v.printScopes(),me,ct,this.cryptoObj.base64Decode,ht,e.token_type,s,e.key_id,r.claims,r.requestedClaimsHash)}let y=null;if(e.refresh_token){let v;if(e.refresh_token_expires_in){const L=typeof e.refresh_token_expires_in=="string"?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in;v=n+L}y=go(this.homeAccountIdentifier,c,e.refresh_token,this.clientId,e.foci,s,v)}let I=null;return e.foci&&(I={clientId:this.clientId,environment:c,familyId:e.foci}),{account:g,idToken:d,accessToken:m,refreshToken:y,appMetadata:I}}static async generateAuthenticationResult(e,t,n,r,o,s,a,c,h){var me,ct,ht,nr,rr;let d=u.EMPTY_STRING,g=[],m=null,y,I,v=u.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType===R.POP&&!o.popKid){const Ui=new Qe(e),{secret:Li,keyId:or}=n.accessToken;if(!or)throw f(vn);d=await Ui.signPopToken(Li,or,o)}else d=n.accessToken.secret;g=U.fromString(n.accessToken.target).asArray(),m=new Date(Number(n.accessToken.expiresOn)*1e3),y=new Date(Number(n.accessToken.extendedExpiresOn)*1e3),n.accessToken.refreshOn&&(I=new Date(Number(n.accessToken.refreshOn)*1e3))}n.appMetadata&&(v=n.appMetadata.familyId===et?et:"");const L=(s==null?void 0:s.oid)||(s==null?void 0:s.sub)||"",F=(s==null?void 0:s.tid)||"";c!=null&&c.spa_accountid&&n.account&&(n.account.nativeAccountId=c==null?void 0:c.spa_accountid);const J=n.account?Nn(n.account.getAccountInfo(),void 0,s,(me=n.idToken)==null?void 0:me.secret):null;return{authority:t.canonicalAuthority,uniqueId:L,tenantId:F,scopes:g,account:J,idToken:((ct=n==null?void 0:n.idToken)==null?void 0:ct.secret)||"",idTokenClaims:s||{},accessToken:d,fromCache:r,expiresOn:m,extExpiresOn:y,refreshOn:I,correlationId:o.correlationId,requestId:h||u.EMPTY_STRING,familyId:v,tokenType:((ht=n.accessToken)==null?void 0:ht.tokenType)||u.EMPTY_STRING,state:a?a.userRequestState:u.EMPTY_STRING,cloudGraphHostName:((nr=n.account)==null?void 0:nr.cloudGraphHostName)||u.EMPTY_STRING,msGraphHost:((rr=n.account)==null?void 0:rr.msGraphHost)||u.EMPTY_STRING,code:c==null?void 0:c.spa_code,fromNativeBroker:!1}}}function Kn(i,e,t,n,r,o,s,a,c,h,d){d==null||d.verbose("setCachedAccount called");const m=i.getAccountKeys().find(F=>F.startsWith(t));let y=null;m&&(y=i.getAccount(m,d));const I=y||D.createAccount({homeAccountId:t,idTokenClaims:r,clientInfo:o,environment:s,cloudGraphHostName:c==null?void 0:c.cloud_graph_host_name,msGraphHost:c==null?void 0:c.msgraph_host,nativeAccountId:h},e,n),v=I.tenantProfiles||[],L=a||I.realm;if(L&&!v.find(F=>F.tenantId===L)){const F=Pn(t,I.localAccountId,L,r);v.push(F)}return I.tenantProfiles=v,I}/*! @azure/msal-common v14.16.0 2024-11-05 */async function Ko(i,e,t){return typeof i=="string"?i:i({clientId:e,tokenEndpoint:t})}/*! @azure/msal-common v14.16.0 2024-11-05 */class xo extends Dn{constructor(e,t){var n;super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=(n=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:n.defaultScopes}async getAuthCodeUrl(e){var n;(n=this.performanceClient)==null||n.addQueueMeasurement(l.GetAuthCodeUrl,e.correlationId);const t=await p(this.createAuthCodeUrlQueryString.bind(this),l.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return S.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){var a,c;if((a=this.performanceClient)==null||a.addQueueMeasurement(l.AuthClientAcquireToken,e.correlationId),!e.code)throw f(no);const n=he(),r=await p(this.executeTokenRequest.bind(this),l.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),o=(c=r.headers)==null?void 0:c[q.X_MS_REQUEST_ID],s=new be(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return s.validateTokenResponse(r.body),p(s.handleServerTokenResponse.bind(s),l.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,n,e,t,void 0,void 0,void 0,o)}handleFragmentResponse(e,t){if(new be(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw f(ao);return e}getLogoutUri(e){if(!e)throw b(Ao);const t=this.createLogoutUrlQueryString(e);return S.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){var h,d;(h=this.performanceClient)==null||h.addQueueMeasurement(l.AuthClientExecuteTokenRequest,t.correlationId);const n=this.createTokenQueryParameters(t),r=S.appendQueryString(e.tokenEndpoint,n),o=await p(this.createTokenRequestBody.bind(this),l.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let s;if(t.clientInfo)try{const g=wt(t.clientInfo,this.cryptoUtils.base64Decode);s={credential:`${g.uid}${G.CLIENT_INFO_SEPARATOR}${g.utid}`,type:W.HOME_ACCOUNT_ID}}catch(g){this.logger.verbose("Could not parse client info for CCS Header: "+g)}const a=this.createTokenRequestHeaders(s||t.ccsCredential),c={clientId:((d=t.tokenBodyParameters)==null?void 0:d.clientId)||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return p(this.executePostToTokenEndpoint.bind(this),l.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(r,o,a,c,t.correlationId,l.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){var r,o;(r=this.performanceClient)==null||r.addQueueMeasurement(l.AuthClientCreateTokenRequestBody,e.correlationId);const t=new nt(e.correlationId,this.performanceClient);if(t.addClientId(e.embeddedClientId||((o=e.tokenBodyParameters)==null?void 0:o[ke])||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):Le.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!rn(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const s=this.config.clientCredentials.clientAssertion;t.addClientAssertion(await Ko(s.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),t.addClientAssertionType(s.assertionType)}if(t.addGrantType(zr.AUTHORIZATION_CODE_GRANT),t.addClientInfo(),e.authenticationScheme===R.POP){const s=new Qe(this.cryptoUtils,this.performanceClient);let a;e.popKid?a=this.cryptoUtils.encodeKid(e.popKid):a=(await p(s.generateCnf.bind(s),l.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(a)}else if(e.authenticationScheme===R.SSH)if(e.sshJwk)t.addSshJwk(e.sshJwk);else throw b(Ut);(!ee.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities);let n;if(e.clientInfo)try{const s=wt(e.clientInfo,this.cryptoUtils.base64Decode);n={credential:`${s.uid}${G.CLIENT_INFO_SEPARATOR}${s.utid}`,type:W.HOME_ACCOUNT_ID}}catch(s){this.logger.verbose("Could not parse client info for CCS Header: "+s)}else n=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&n)switch(n.type){case W.HOME_ACCOUNT_ID:try{const s=xe(n.credential);t.addCcsOid(s)}catch(s){this.logger.verbose("Could not parse home account ID for CCS Header: "+s)}break;case W.UPN:t.addCcsUpn(n.credential);break}return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),e.enableSpaAuthorizationCode&&(!e.tokenBodyParameters||!e.tokenBodyParameters[Ir])&&t.addExtraQueryParameters({[Ir]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){var o,s;const t=e.correlationId||this.config.cryptoInterface.createNewGuid();(o=this.performanceClient)==null||o.addQueueMeasurement(l.AuthClientCreateQueryString,t);const n=new nt(t,this.performanceClient);n.addClientId(e.embeddedClientId||((s=e.extraQueryParameters)==null?void 0:s[ke])||this.config.authOptions.clientId);const r=[...e.scopes||[],...e.extraScopesToConsent||[]];if(n.addScopes(r,!0,this.oidcDefaultScopes),n.addRedirectUri(e.redirectUri),n.addCorrelationId(t),n.addResponseMode(e.responseMode),n.addResponseTypeCode(),n.addLibraryInfo(this.config.libraryInfo),rn(this.config)||n.addApplicationTelemetry(this.config.telemetry.application),n.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&n.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&n.addPrompt(e.prompt),e.domainHint&&n.addDomainHint(e.domainHint),e.prompt!==K.SELECT_ACCOUNT)if(e.sid&&e.prompt===K.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),n.addSid(e.sid);else if(e.account){const a=this.extractAccountSid(e.account);let c=this.extractLoginHint(e.account);if(c&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),c=null),c){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),n.addLoginHint(c);try{const h=xe(e.account.homeAccountId);n.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(a&&e.prompt===K.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),n.addSid(a);try{const h=xe(e.account.homeAccountId);n.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),n.addLoginHint(e.loginHint),n.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),n.addLoginHint(e.account.username);try{const h=xe(e.account.homeAccountId);n.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),n.addLoginHint(e.loginHint),n.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&n.addNonce(e.nonce),e.state&&n.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.embeddedClientId&&n.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),this.addExtraQueryParams(e,n),e.nativeBroker&&(n.addNativeBroker(),e.authenticationScheme===R.POP)){const a=new Qe(this.cryptoUtils);let c;e.popKid?c=this.cryptoUtils.encodeKid(e.popKid):c=(await p(a.generateCnf.bind(a),l.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,n.addPopToken(c)}return n.createQueryString()}createLogoutUrlQueryString(e){const t=new nt(e.correlationId,this.performanceClient);return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){var t;return((t=e.idTokenClaims)==null?void 0:t.sid)||null}extractLoginHint(e){var t;return((t=e.idTokenClaims)==null?void 0:t.login_hint)||null}}/*! @azure/msal-common v14.16.0 2024-11-05 */const xa=300;class an extends Dn{constructor(e,t){super(e,t)}async acquireToken(e){var s,a;(s=this.performanceClient)==null||s.addQueueMeasurement(l.RefreshTokenClientAcquireToken,e.correlationId);const t=he(),n=await p(this.executeTokenRequest.bind(this),l.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),r=(a=n.headers)==null?void 0:a[q.X_MS_REQUEST_ID],o=new be(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(n.body),p(o.handleServerTokenResponse.bind(o),l.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,r)}async acquireTokenByRefreshToken(e){var n;if(!e)throw b(To);if((n=this.performanceClient)==null||n.addQueueMeasurement(l.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw f(En);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await p(this.acquireTokenWithCachedRefreshToken.bind(this),l.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(r){const o=r instanceof ne&&r.errorCode===kt,s=r instanceof ve&&r.errorCode===cr.INVALID_GRANT_ERROR&&r.subError===cr.CLIENT_MISMATCH_ERROR;if(o||s)return p(this.acquireTokenWithCachedRefreshToken.bind(this),l.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw r}return p(this.acquireTokenWithCachedRefreshToken.bind(this),l.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(l.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const n=Me(this.cacheManager.getRefreshToken.bind(this.cacheManager),l.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!n)throw sn(kt);if(n.expiresOn&&nn(n.expiresOn,e.refreshTokenExpirationOffsetSeconds||xa))throw sn(Hn);const r={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||R.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:W.HOME_ACCOUNT_ID}};try{return await p(this.acquireToken.bind(this),l.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(r)}catch(s){if(s instanceof ne&&s.subError===Ht){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const a=Ke(n);this.cacheManager.removeRefreshToken(a)}throw s}}async executeTokenRequest(e,t){var c,h;(c=this.performanceClient)==null||c.addQueueMeasurement(l.RefreshTokenClientExecuteTokenRequest,e.correlationId);const n=this.createTokenQueryParameters(e),r=S.appendQueryString(t.tokenEndpoint,n),o=await p(this.createTokenRequestBody.bind(this),l.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),s=this.createTokenRequestHeaders(e.ccsCredential),a={clientId:((h=e.tokenBodyParameters)==null?void 0:h.clientId)||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return p(this.executePostToTokenEndpoint.bind(this),l.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(r,o,s,a,e.correlationId,l.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){var r,o,s;(r=this.performanceClient)==null||r.addQueueMeasurement(l.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,n=new nt(t,this.performanceClient);if(n.addClientId(e.embeddedClientId||((o=e.tokenBodyParameters)==null?void 0:o[ke])||this.config.authOptions.clientId),e.redirectUri&&n.addRedirectUri(e.redirectUri),n.addScopes(e.scopes,!0,(s=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:s.defaultScopes),n.addGrantType(zr.REFRESH_TOKEN_GRANT),n.addClientInfo(),n.addLibraryInfo(this.config.libraryInfo),n.addApplicationTelemetry(this.config.telemetry.application),n.addThrottling(),this.serverTelemetryManager&&!rn(this.config)&&n.addServerTelemetry(this.serverTelemetryManager),n.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&n.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const a=this.config.clientCredentials.clientAssertion;n.addClientAssertion(await Ko(a.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),n.addClientAssertionType(a.assertionType)}if(e.authenticationScheme===R.POP){const a=new Qe(this.cryptoUtils,this.performanceClient);let c;e.popKid?c=this.cryptoUtils.encodeKid(e.popKid):c=(await p(a.generateCnf.bind(a),l.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,n.addPopToken(c)}else if(e.authenticationScheme===R.SSH)if(e.sshJwk)n.addSshJwk(e.sshJwk);else throw b(Ut);if((!ee.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case W.HOME_ACCOUNT_ID:try{const a=xe(e.ccsCredential.credential);n.addCcsOid(a)}catch(a){this.logger.verbose("Could not parse home account ID for CCS Header: "+a)}break;case W.UPN:n.addCcsUpn(e.ccsCredential.credential);break}return e.embeddedClientId&&n.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&n.addExtraQueryParameters(e.tokenBodyParameters),n.createQueryString()}}/*! @azure/msal-common v14.16.0 2024-11-05 */class Fa extends Dn{constructor(e,t){super(e,t)}async acquireToken(e){var t;try{const[n,r]=await this.acquireCachedToken({...e,scopes:(t=e.scopes)!=null&&t.length?e.scopes:[...je]});return r===ye.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new an(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),n}catch(n){if(n instanceof Pt&&n.errorCode===ue)return new an(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw n}}async acquireCachedToken(e){var c;(c=this.performanceClient)==null||c.addQueueMeasurement(l.SilentFlowClientAcquireCachedToken,e.correlationId);let t=ye.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!ee.isEmptyObj(e.claims))throw this.setCacheOutcome(ye.FORCE_REFRESH_OR_CLAIMS,e.correlationId),f(ue);if(!e.account)throw f(En);const n=e.account.tenantId||ba(e.authority),r=this.cacheManager.getTokenKeys(),o=this.cacheManager.getAccessToken(e.account,e,r,n,this.performanceClient,e.correlationId);if(o){if(ps(o.cachedAt)||nn(o.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(ye.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),f(ue);o.refreshOn&&nn(o.refreshOn,0)&&(t=ye.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(ye.NO_CACHED_ACCESS_TOKEN,e.correlationId),f(ue);const s=e.authority||this.authority.getPreferredCache(),a={account:this.cacheManager.readAccountFromCache(e.account),accessToken:o,idToken:this.cacheManager.getIdToken(e.account,r,n,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(s)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await p(this.generateResultFromCacheRecord.bind(this),l.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(a,e),t]}setCacheOutcome(e,t){var n,r;(n=this.serverTelemetryManager)==null||n.setCacheOutcome(e),(r=this.performanceClient)==null||r.addFields({cacheOutcome:e},t),e!==ye.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(l.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId);let n;if(e.idToken&&(n=Ne(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||t.maxAge===0){const o=n==null?void 0:n.auth_time;if(!o)throw f(An);uo(o,t.maxAge)}return be.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const Ba={sendGetRequestAsync:()=>Promise.reject(f(w)),sendPostRequestAsync:()=>Promise.reject(f(w))};/*! @azure/msal-common v14.16.0 2024-11-05 */const _r=",",Fo="|";function Ga(i){const{skus:e,libraryName:t,libraryVersion:n,extensionName:r,extensionVersion:o}=i,s=new Map([[0,[t,n]],[2,[r,o]]]);let a=[];if(e!=null&&e.length){if(a=e.split(_r),a.length<4)return e}else a=Array.from({length:4},()=>Fo);return s.forEach((c,h)=>{var d,g;c.length===2&&((d=c[0])!=null&&d.length)&&((g=c[1])!=null&&g.length)&&qa({skuArr:a,index:h,skuName:c[0],skuVersion:c[1]})}),a.join(_r)}function qa(i){const{skuArr:e,index:t,skuName:n,skuVersion:r}=i;t>=e.length||(e[t]=[n,r].join(Fo))}class ot{constructor(e,t){this.cacheOutcome=ye.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||u.EMPTY_STRING,this.wrapperVer=e.wrapperVer||u.EMPTY_STRING,this.telemetryCacheKey=x.CACHE_KEY+G.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${x.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],n=this.getNativeBrokerErrorCode();n!=null&&n.length&&t.push(`broker_error=${n}`);const r=t.join(x.VALUE_SEPARATOR),o=this.getRegionDiscoveryFields(),s=[e,o].join(x.VALUE_SEPARATOR);return[x.SCHEMA_VERSION,s,r].join(x.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=ot.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(x.VALUE_SEPARATOR),r=e.errors.slice(0,t).join(x.VALUE_SEPARATOR),o=e.errors.length,s=t<o?x.OVERFLOW_TRUE:x.OVERFLOW_FALSE,a=[o,s].join(x.VALUE_SEPARATOR);return[x.SCHEMA_VERSION,e.cacheHits,n,r,a].join(x.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=x.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof N?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(x.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){const e={failedRequests:[],errors:[],cacheHits:0};return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=ot.maxErrorsToSend(e),n=e.errors.length;if(t===n)this.cacheManager.removeItem(this.telemetryCacheKey);else{const r={failedRequests:e.failedRequests.slice(t*2),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r)}}static maxErrorsToSend(e){let t,n=0,r=0;const o=e.errors.length;for(t=0;t<o;t++){const s=e.failedRequests[2*t]||u.EMPTY_STRING,a=e.failedRequests[2*t+1]||u.EMPTY_STRING,c=e.errors[t]||u.EMPTY_STRING;if(r+=s.toString().length+a.toString().length+c.length+3,r<x.MAX_LAST_HEADER_BYTES)n+=1;else break}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||u.EMPTY_STRING),e.push(this.regionSource||u.EMPTY_STRING),e.push(this.regionOutcome||u.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return Ga(e)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const Bo="missing_kid_error",Go="missing_alg_error";/*! @azure/msal-common v14.16.0 2024-11-05 */const $a={[Bo]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[Go]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class xn extends N{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,xn.prototype)}}function Rr(i){return new xn(i,$a[i])}/*! @azure/msal-common v14.16.0 2024-11-05 */class Fn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw Rr(Bo);if(!e.alg)throw Rr(Go);const t=new Fn({typ:e.typ||Zi.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class kr{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class za{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:ka.InProgress,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new kr}}startPerformanceMeasurement(){return new kr}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Bn="pkce_not_created",cn="crypto_nonexistent",Kt="empty_navigate_uri",qo="hash_empty_error",Gn="no_state_in_hash",$o="hash_does_not_contain_known_properties",zo="unable_to_parse_state",Qo="state_interaction_type_mismatch",Vo="interaction_in_progress",Yo="popup_window_error",jo="empty_window_error",Oe="user_cancelled",Qa="monitor_popup_timeout",Wo="monitor_window_timeout",Jo="redirect_in_iframe",Xo="block_iframe_reload",Zo="block_nested_popups",Va="iframe_closed_prematurely",xt="silent_logout_unsupported",ei="no_account_error",Ya="silent_prompt_value_error",ti="no_token_request_cache_error",ni="unable_to_parse_token_request_cache_error",qn="no_cached_authority_error",ja="auth_request_not_set_error",Wa="invalid_cache_type",Ft="non_browser_environment",De="database_not_open",bt="no_network_connectivity",ri="post_request_failed",oi="get_request_failed",hn="failed_to_parse_response",ii="unable_to_load_token",$n="crypto_key_not_found",si="auth_code_required",ai="auth_code_or_nativeAccountId_required",ci="spa_code_and_nativeAccountId_present",zn="database_unavailable",hi="unable_to_acquire_token_from_native_platform",di="native_handshake_timeout",li="native_extension_not_installed",st="native_connection_not_established",ui="uninitialized_public_client_application",gi="native_prompt_not_supported",fi="invalid_base64_string",pi="invalid_pop_token_request",mi="failed_to_build_headers",Ci="failed_to_parse_headers";/*! @azure/msal-browser v3.28.1 2025-01-14 */const de="For more visit: aka.ms/msaljs/browser-errors",Ja={[Bn]:"The PKCE code challenge and verifier could not be generated.",[cn]:"The crypto object or function is not available.",[Kt]:"Navigation URI is empty. Please check stack trace for more info.",[qo]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${de}`,[Gn]:"Hash does not contain state. Please verify that the request originated from msal.",[$o]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${de}`,[zo]:"Unable to parse state. Please verify that the request originated from msal.",[Qo]:"Hash contains state but the interaction type does not match the caller.",[Vo]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${de}`,[Yo]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[jo]:"window.open returned null or undefined window object.",[Oe]:"User cancelled the flow.",[Qa]:`Token acquisition in popup failed due to timeout.  ${de}`,[Wo]:`Token acquisition in iframe failed due to timeout.  ${de}`,[Jo]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[Xo]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${de}`,[Zo]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[Va]:"The iframe being monitored was closed prematurely.",[xt]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[ei]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Ya]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[ti]:"No token request found in cache.",[ni]:"The cached token request could not be parsed.",[qn]:"No cached authority found.",[ja]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Wa]:"Invalid cache type",[Ft]:"Login and token requests are not supported in non-browser environments.",[De]:"Database is not open!",[bt]:"No network connectivity. Check your internet connection.",[ri]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[oi]:"Network request failed. Please check the network trace to determine root cause.",[hn]:"Failed to parse network response. Check network trace.",[ii]:"Error loading token to cache.",[$n]:"Cryptographic Key or Keypair not found in browser storage.",[si]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[ai]:"An authorization code or nativeAccountId must be provided to this flow.",[ci]:"Request cannot contain both spa code and native account id.",[zn]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[hi]:`Unable to acquire token from native platform.  ${de}`,[di]:"Timed out while attempting to establish connection to browser extension",[li]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[st]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${de}`,[ui]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${de}`,[gi]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[fi]:"Invalid base64 encoded string.",[pi]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[mi]:"Failed to build request headers object.",[Ci]:"Failed to parse response headers"};class at extends N{constructor(e,t){super(e,Ja[e],t),Object.setPrototypeOf(this,at.prototype),this.name="BrowserAuthError"}}function C(i,e){return new at(i,e)}/*! @azure/msal-browser v3.28.1 2025-01-14 */const j={INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},Fe={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},Se={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},$={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},br={GET:"GET",POST:"POST"},_={AUTHORITY:"authority",ACQUIRE_TOKEN_ACCOUNT:"acquireToken.account",SESSION_STATE:"session.state",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",RENEW_STATUS:"token.renew.status",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",SCOPES:"scopes",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native",REDIRECT_CONTEXT:"request.redirect.context"},Ce={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},pt={WRAPPER_SKU:"wrapper.sku",WRAPPER_VER:"wrapper.version"},O={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var T;(function(i){i.Redirect="redirect",i.Popup="popup",i.Silent="silent",i.None="none"})(T||(T={}));const Or={scopes:je},yi="jwk",dn="msal.db",Xa=1,Za=`${dn}.keys`,Q={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},ec=[Q.Default,Q.Skip,Q.RefreshTokenAndNetwork],tc="msal.browser.log.level",nc="msal.browser.log.pii";/*! @azure/msal-browser v3.28.1 2025-01-14 */function mt(i){return encodeURIComponent(Qn(i).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function Bt(i){return Ti(i).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Qn(i){return Ti(new TextEncoder().encode(i))}function Ti(i){const e=Array.from(i,t=>String.fromCodePoint(t)).join("");return btoa(e)}/*! @azure/msal-browser v3.28.1 2025-01-14 */const rc="RSASSA-PKCS1-v1_5",Ai="SHA-256",oc=2048,ic=new Uint8Array([1,0,1]),Pr="0123456789abcdef",Nr=new Uint32Array(1),sc="crypto_subtle_undefined",Vn={name:rc,hash:Ai,modulusLength:oc,publicExponent:ic};function ac(i){if(!window)throw C(Ft);if(!window.crypto)throw C(cn);if(!i&&!window.crypto.subtle)throw C(cn,sc)}async function Ei(i,e,t){e==null||e.addQueueMeasurement(l.Sha256Digest,t);const r=new TextEncoder().encode(i);return window.crypto.subtle.digest(Ai,r)}function cc(i){return window.crypto.getRandomValues(i)}function Yt(){return window.crypto.getRandomValues(Nr),Nr[0]}function pe(){const i=Date.now(),e=Yt()*1024+(Yt()&1023),t=new Uint8Array(16),n=Math.trunc(e/2**30),r=e&2**30-1,o=Yt();t[0]=i/2**40,t[1]=i/2**32,t[2]=i/2**24,t[3]=i/2**16,t[4]=i/2**8,t[5]=i,t[6]=112|n>>>8,t[7]=n,t[8]=128|r>>>24,t[9]=r>>>16,t[10]=r>>>8,t[11]=r,t[12]=o>>>24,t[13]=o>>>16,t[14]=o>>>8,t[15]=o;let s="";for(let a=0;a<t.length;a++)s+=Pr.charAt(t[a]>>>4),s+=Pr.charAt(t[a]&15),(a===3||a===5||a===7||a===9)&&(s+="-");return s}async function hc(i,e){return window.crypto.subtle.generateKey(Vn,i,e)}async function jt(i){return window.crypto.subtle.exportKey(yi,i)}async function dc(i,e,t){return window.crypto.subtle.importKey(yi,i,Vn,e,t)}async function lc(i,e){return window.crypto.subtle.sign(Vn,i,e)}async function Ii(i){const e=await Ei(i),t=new Uint8Array(e);return Bt(t)}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Yn="storage_not_supported",uc="stubbed_public_client_application_called",vi="in_mem_redirect_unavailable";/*! @azure/msal-browser v3.28.1 2025-01-14 */const gc={[Yn]:"Given storage configuration option was not supported.",[uc]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[vi]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class jn extends N{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,jn.prototype)}}function Wn(i){return new jn(i,gc[i])}/*! @azure/msal-browser v3.28.1 2025-01-14 */function fc(i){i.location.hash="",typeof i.history.replaceState=="function"&&i.history.replaceState(null,"",`${i.location.origin}${i.location.pathname}${i.location.search}`)}function pc(i){const e=i.split("#");e.shift(),window.location.hash=e.length>0?e.join("#"):""}function Jn(){return window.parent!==window}function mc(){return typeof window<"u"&&!!window.opener&&window.opener!==window&&typeof window.name=="string"&&window.name.indexOf(`${j.POPUP_NAME_PREFIX}.`)===0}function ge(){return typeof window<"u"&&window.location?window.location.href.split("?")[0].split("#")[0]:""}function Cc(){const e=new S(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function yc(){if(S.hashContainsKnownProperties(window.location.hash)&&Jn())throw C(Xo)}function Tc(i){if(Jn()&&!i)throw C(Jo)}function Ac(){if(mc())throw C(Zo)}function wi(){if(typeof window>"u")throw C(Ft)}function Si(i){if(!i)throw C(ui)}function Xn(i){wi(),yc(),Ac(),Si(i)}function Mr(i,e){if(Xn(i),Tc(e.system.allowRedirectInIframe),e.cache.cacheLocation===$.MemoryStorage&&!e.cache.storeAuthStateInCookie)throw Wn(vi)}function _i(i){const e=document.createElement("link");e.rel="preconnect",e.href=new URL(i).origin,e.crossOrigin="anonymous",document.head.appendChild(e),window.setTimeout(()=>{try{document.head.removeChild(e)}catch{}},1e4)}function Ec(){return pe()}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ot{navigateInternal(e,t){return Ot.defaultNavigateWindow(e,t)}navigateExternal(e,t){return Ot.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(n=>{setTimeout(()=>{n(!0)},t.timeout)})}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ic{async sendGetRequestAsync(e,t){let n,r={},o=0;const s=Ur(t);try{n=await fetch(e,{method:br.GET,headers:s})}catch{throw C(window.navigator.onLine?oi:bt)}r=Lr(n.headers);try{return o=n.status,{headers:r,body:await n.json(),status:o}}catch{throw vr(C(hn),o,r)}}async sendPostRequestAsync(e,t){const n=t&&t.body||"",r=Ur(t);let o,s=0,a={};try{o=await fetch(e,{method:br.POST,headers:r,body:n})}catch{throw C(window.navigator.onLine?ri:bt)}a=Lr(o.headers);try{return s=o.status,{headers:a,body:await o.json(),status:s}}catch{throw vr(C(hn),s,a)}}}function Ur(i){try{const e=new Headers;if(!(i&&i.headers))return e;const t=i.headers;return Object.entries(t).forEach(([n,r])=>{e.append(n,r)}),e}catch{throw C(mi)}}function Lr(i){try{const e={};return i.forEach((t,n)=>{e[n]=t}),e}catch{throw C(Ci)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const vc=6e4,ln=1e4,wc=3e4,Sc=2e3;function _c({auth:i,cache:e,system:t,telemetry:n},r){const o={clientId:u.EMPTY_STRING,authority:`${u.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:u.EMPTY_STRING,authorityMetadata:u.EMPTY_STRING,redirectUri:typeof window<"u"?ge():"",postLogoutRedirectUri:u.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:fe.AAD,OIDCOptions:{serverResponseType:it.FRAGMENT,defaultScopes:[u.OPENID_SCOPE,u.PROFILE_SCOPE,u.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:Sn.None,tenant:u.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},s={cacheLocation:$.SessionStorage,temporaryCacheLocation:$.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!(e&&e.cacheLocation===$.LocalStorage),claimsBasedCachingEnabled:!1},a={loggerCallback:()=>{},logLevel:P.Info,piiLoggingEnabled:!1},h={...{...Mo,loggerOptions:a,networkClient:r?new Ic:Ba,navigationClient:new Ot,loadFrameTimeout:0,windowHashTimeout:(t==null?void 0:t.loadFrameTimeout)||vc,iframeHashTimeout:(t==null?void 0:t.loadFrameTimeout)||ln,navigateFrameWait:0,redirectNavigationTimeout:wc,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:(t==null?void 0:t.nativeBrokerHandshakeTimeout)||Sc,pollIntervalMilliseconds:j.DEFAULT_POLL_INTERVAL_MS},...t,loggerOptions:(t==null?void 0:t.loggerOptions)||a},d={application:{appName:u.EMPTY_STRING,appVersion:u.EMPTY_STRING},client:new za};if((i==null?void 0:i.protocolMode)!==fe.OIDC&&(i!=null&&i.OIDCOptions)&&new Ie(h.loggerOptions).warning(JSON.stringify(b(So))),i!=null&&i.protocolMode&&i.protocolMode!==fe.AAD&&(h!=null&&h.allowNativeBroker))throw b(_o);return{auth:{...o,...i,OIDCOptions:{...o.OIDCOptions,...i==null?void 0:i.OIDCOptions}},cache:{...s,...e},system:h,telemetry:{...d,...n}}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Rc="@azure/msal-browser",Gt="3.28.1";/*! @azure/msal-browser v3.28.1 2025-01-14 */class Zn{static loggerCallback(e,t){switch(e){case P.Error:console.error(t);return;case P.Info:console.info(t);return;case P.Verbose:console.debug(t);return;case P.Warning:console.warn(t);return;default:console.log(t);return}}constructor(e){var c;this.browserEnvironment=typeof window<"u",this.config=_c(e,this.browserEnvironment);let t;try{t=window[$.SessionStorage]}catch{}const n=t==null?void 0:t.getItem(tc),r=(c=t==null?void 0:t.getItem(nc))==null?void 0:c.toLowerCase(),o=r==="true"?!0:r==="false"?!1:void 0,s={...this.config.system.loggerOptions},a=n&&Object.keys(P).includes(n)?P[n]:void 0;a&&(s.loggerCallback=Zn.loggerCallback,s.logLevel=a),o!==void 0&&(s.piiLoggingEnabled=o),this.logger=new Ie(s,Rc,Gt),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Pe extends Zn{getModuleName(){return Pe.MODULE_NAME}getId(){return Pe.ID}async initialize(){return this.available=typeof window<"u",this.available}}Pe.MODULE_NAME="";Pe.ID="StandardOperatingContext";/*! @azure/msal-browser v3.28.1 2025-01-14 */function ce(i){return new TextDecoder().decode(kc(i))}function kc(i){let e=i.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw C(fi)}const t=atob(e);return Uint8Array.from(t,n=>n.codePointAt(0)||0)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class bc{constructor(){this.dbName=dn,this.version=Xa,this.tableName=Za,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const n=window.indexedDB.open(this.dbName,this.version);n.addEventListener("upgradeneeded",r=>{r.target.result.createObjectStore(this.tableName)}),n.addEventListener("success",r=>{const o=r;this.db=o.target.result,this.dbOpen=!0,e()}),n.addEventListener("error",()=>t(C(zn)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(De));const s=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);s.addEventListener("success",a=>{const c=a;this.closeConnection(),t(c.target.result)}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((n,r)=>{if(!this.db)return r(C(De));const a=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);a.addEventListener("success",()=>{this.closeConnection(),n()}),a.addEventListener("error",c=>{this.closeConnection(),r(c)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(De));const s=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);s.addEventListener("success",()=>{this.closeConnection(),t()}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(C(De));const o=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();o.addEventListener("success",s=>{const a=s;this.closeConnection(),e(a.target.result)}),o.addEventListener("error",s=>{this.closeConnection(),t(s)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(De));const s=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);s.addEventListener("success",a=>{const c=a;this.closeConnection(),t(c.target.result===1)}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const n=window.indexedDB.deleteDatabase(dn),r=setTimeout(()=>t(!1),200);n.addEventListener("success",()=>(clearTimeout(r),e(!0))),n.addEventListener("blocked",()=>(clearTimeout(r),e(!0))),n.addEventListener("error",()=>(clearTimeout(r),t(!1)))})}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class un{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,n)=>{e.push(n)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Oc{constructor(e){this.inMemoryCache=new un,this.indexedDBCache=new bc,this.logger=e}handleDatabaseAccessError(e){if(e instanceof at&&e.errorCode===zn)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(n){this.handleDatabaseAccessError(n)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(n){this.handleDatabaseAccessError(n)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(t){this.handleDatabaseAccessError(t)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(e.length===0)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(t){this.handleDatabaseAccessError(t)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(n){this.handleDatabaseAccessError(n)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ve{constructor(e,t,n){this.logger=e,ac(n??!1),this.cache=new Oc(this.logger),this.performanceClient=t}createNewGuid(){return pe()}base64Encode(e){return Qn(e)}base64Decode(e){return ce(e)}base64UrlEncode(e){return mt(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){var d;const t=(d=this.performanceClient)==null?void 0:d.startMeasurement(l.CryptoOptsGetPublicKeyThumbprint,e.correlationId),n=await hc(Ve.EXTRACTABLE,Ve.POP_KEY_USAGES),r=await jt(n.publicKey),o={e:r.e,kty:r.kty,n:r.n},s=Dr(o),a=await this.hashString(s),c=await jt(n.privateKey),h=await dc(c,!1,["sign"]);return await this.cache.setItem(a,{privateKey:h,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),a}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,n,r){var me;const o=(me=this.performanceClient)==null?void 0:me.startMeasurement(l.CryptoOptsSignJwt,r),s=await this.cache.getItem(t);if(!s)throw C($n);const a=await jt(s.publicKey),c=Dr(a),h=mt(JSON.stringify({kid:t})),d=Fn.getShrHeaderString({...n==null?void 0:n.header,alg:a.alg,kid:h}),g=mt(d);e.cnf={jwk:JSON.parse(c)};const m=mt(JSON.stringify(e)),y=`${g}.${m}`,v=new TextEncoder().encode(y),L=await lc(s.privateKey,v),F=Bt(new Uint8Array(L)),J=`${y}.${F}`;return o&&o.end({success:!0}),J}async hashString(e){return Ii(e)}}Ve.POP_KEY_USAGES=["sign","verify"];Ve.EXTRACTABLE=!0;function Dr(i){return JSON.stringify(i,Object.keys(i).sort())}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Pc{constructor(){if(!window.localStorage)throw Wn(Yn)}getItem(e){return window.localStorage.getItem(e)}setItem(e,t){window.localStorage.setItem(e,t)}removeItem(e){window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Nc{constructor(){if(!window.sessionStorage)throw Wn(Yn)}getItem(e){return window.sessionStorage.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */function Ri(i,e){if(!e)return null;try{return te.parseRequestState(i,e).libraryState.meta}catch{throw f($e)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Mc=24*60*60*1e3;class Uc{getItem(e){const t=`${encodeURIComponent(e)}`,n=document.cookie.split(";");for(let r=0;r<n.length;r++){const o=n[r],[s,...a]=decodeURIComponent(o).trim().split("="),c=a.join("=");if(s===t)return c}return""}setItem(e,t,n,r=!0){let o=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(n){const s=Lc(n);o+=`expires=${s};`}r&&(o+="Secure;"),document.cookie=o}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach(n=>{const r=decodeURIComponent(n).trim().split("=");t.push(r[0])}),t}containsKey(e){return this.getKeys().includes(e)}}function Lc(i){const e=new Date;return new Date(e.getTime()+i*Mc).toUTCString()}/*! @azure/msal-browser v3.28.1 2025-01-14 */class gn extends ze{constructor(e,t,n,r,o,s){super(e,n,r,o),this.cacheConfig=t,this.logger=r,this.internalStorage=new un,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupBrowserStorage(this.cacheConfig.temporaryCacheLocation),this.cookieStorage=new Uc,t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=s}setupBrowserStorage(e){try{switch(e){case $.LocalStorage:return new Pc;case $.SessionStorage:return new Nc;case $.MemoryStorage:default:break}}catch(t){this.logger.error(t)}return this.cacheConfig.cacheLocation=$.MemoryStorage,new un}migrateCacheEntries(){const e=`${u.CACHE_PREFIX}.${H.ID_TOKEN}`,t=`${u.CACHE_PREFIX}.${H.CLIENT_INFO}`,n=`${u.CACHE_PREFIX}.${H.ERROR}`,r=`${u.CACHE_PREFIX}.${H.ERROR_DESC}`,o=this.browserStorage.getItem(e),s=this.browserStorage.getItem(t),a=this.browserStorage.getItem(n),c=this.browserStorage.getItem(r),h=[o,s,a,c];[H.ID_TOKEN,H.CLIENT_INFO,H.ERROR,H.ERROR_DESC].forEach((g,m)=>{const y=h[m];y&&this.setTemporaryCache(g,y,!0)})}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(Ce.ACCOUNT_KEYS),t=this.getItem(`${Ce.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(r=>{if(this.isCredentialKey(r)){const o=this.getItem(r);if(o){const s=this.validateAndParseJson(o);if(s&&s.hasOwnProperty("credentialType"))switch(s.credentialType){case E.ID_TOKEN:if(gr(s)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${r} found, saving key to token key map`);const a=s,c=this.updateCredentialCacheKey(r,a);this.addTokenKey(c,E.ID_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${r}`);break;case E.ACCESS_TOKEN:case E.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(ur(s)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${r} found, saving key to token key map`);const a=s,c=this.updateCredentialCacheKey(r,a);this.addTokenKey(c,E.ACCESS_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${r}`);break;case E.REFRESH_TOKEN:if(fr(s)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${r} found, saving key to token key map`);const a=s,c=this.updateCredentialCacheKey(r,a);this.addTokenKey(c,E.REFRESH_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${r}`);break}}}if(this.isAccountKey(r)){const o=this.getItem(r);if(o){const s=this.validateAndParseJson(o);s&&D.isAccountEntity(s)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${r} found, saving key to account key map`),this.addAccountKeyToMap(r))}}})}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&typeof t=="object"?t:null}catch{return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const n=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,n,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const n=this.validateAndParseJson(t);return!n||!D.isAccountEntity(n)?(this.removeAccountKeyFromMap(e),null):ze.toObject(new D,n)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(Ce.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();t.indexOf(e)===-1?(t.push(e),this.setItem(Ce.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),n=t.indexOf(e);n>-1?(t.splice(n,1),this.setItem(Ce.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,E.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,E.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,E.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${Ce.TOKEN_KEYS}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const n=this.getTokenKeys();switch(t){case E.ID_TOKEN:n.idToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),n.idToken.push(e));break;case E.ACCESS_TOKEN:n.accessToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),n.accessToken.push(e));break;case E.REFRESH_TOKEN:n.refreshToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),n.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),f(tn)}this.setItem(`${Ce.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const n=this.getTokenKeys();switch(t){case E.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const r=n.idToken.indexOf(e);r>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),n.idToken.splice(r,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case E.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const o=n.accessToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),n.accessToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case E.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const s=n.refreshToken.indexOf(e);s>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),n.refreshToken.splice(s,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),f(tn)}this.setItem(`${Ce.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,E.ID_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!gr(n)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,E.ID_TOKEN),null):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=Ke(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,E.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,E.ACCESS_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!ur(n)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,E.ACCESS_TOKEN),null):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=Ke(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,E.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,E.REFRESH_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!fr(n)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,E.REFRESH_TOKEN),null):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=Ke(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,E.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!ws(e,n)?(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),n)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=vs(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Es(e,n)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),n)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&Ss(e,n)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),n):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(t=>this.isAuthorityMetadata(t))}setWrapperMetadata(e,t){this.internalStorage.setItem(pt.WRAPPER_SKU,e),this.internalStorage.setItem(pt.WRAPPER_VER,t)}getWrapperMetadata(){const e=this.internalStorage.getItem(pt.WRAPPER_SKU)||u.EMPTY_STRING,t=this.internalStorage.getItem(pt.WRAPPER_VER)||u.EMPTY_STRING;return[e,t]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(H.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const r=this.generateCacheKey(H.ACTIVE_ACCOUNT),o=this.getItem(r);if(!o)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const s=this.getAccountInfoFilteredBy({localAccountId:o});return s?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(s),s):null}const n=this.validateAndParseJson(t);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(H.ACTIVE_ACCOUNT_FILTERS),n=this.generateCacheKey(H.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");const r={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(r)),this.browserStorage.setItem(n,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(n)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Is(e,n)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),n)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const n=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const o=this.cookieStorage.getItem(n);if(o)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),o}const r=this.temporaryCacheStorage.getItem(n);if(!r){if(this.cacheConfig.cacheLocation===$.LocalStorage){const o=this.browserStorage.getItem(n);if(o)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),o}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),r}setTemporaryCache(e,t,n){const r=n?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(r,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(r,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach(e=>{(e.indexOf(u.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{(e.indexOf(u.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.browserStorage.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(l.ClearTokensAndKeysWithClaims,t);const n=this.getTokenKeys(),r=[];n.accessToken.forEach(o=>{const s=this.getAccessTokenCredential(o);s!=null&&s.requestedClaimsHash&&o.includes(s.requestedClaimsHash.toLowerCase())&&r.push(this.removeAccessToken(o))}),await Promise.all(r),r.length>0&&this.logger.warning(`${r.length} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):ee.startsWith(e,u.CACHE_PREFIX)||ee.startsWith(e,H.ADAL_ID_TOKEN)?e:`${u.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=te.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.AUTHORITY}.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=te.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=te.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.REQUEST_STATE}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),n=this.getTemporaryCache(t);if(!n)return null;const r=this.generateAuthorityKey(n);return this.getTemporaryCache(r)}updateCacheEntries(e,t,n,r,o){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const s=this.generateStateKey(e);this.setTemporaryCache(s,e,!1);const a=this.generateNonceKey(e);this.setTemporaryCache(a,t,!1);const c=this.generateAuthorityKey(e);if(this.setTemporaryCache(c,n,!1),o){const h={credential:o.homeAccountId,type:W.HOME_ACCOUNT_ID};this.setTemporaryCache(_.CCS_CREDENTIAL,JSON.stringify(h),!0)}else if(r){const h={credential:r,type:W.UPN};this.setTemporaryCache(_.CCS_CREDENTIAL,JSON.stringify(h),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach(t=>{t.indexOf(e)!==-1&&this.removeTemporaryItem(t)}),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(_.REQUEST_PARAMS)),this.removeTemporaryItem(this.generateCacheKey(_.ORIGIN_URI)),this.removeTemporaryItem(this.generateCacheKey(_.URL_HASH)),this.removeTemporaryItem(this.generateCacheKey(_.CORRELATION_ID)),this.removeTemporaryItem(this.generateCacheKey(_.CCS_CREDENTIAL)),this.removeTemporaryItem(this.generateCacheKey(_.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const t=this.generateStateKey(e),n=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||u.EMPTY_STRING)}}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach(t=>{if(t.indexOf(_.REQUEST_STATE)===-1)return;const n=this.temporaryCacheStorage.getItem(t);if(!n)return;const r=Ri(this.cryptoImpl,n);r&&r.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n))}),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=Qn(JSON.stringify(e));this.setTemporaryCache(_.REQUEST_PARAMS,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(_.REQUEST_PARAMS,!0);if(!t)throw C(ti);let n;try{n=JSON.parse(ce(t))}catch(r){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${r}`),C(ni)}if(this.removeTemporaryItem(this.generateCacheKey(_.REQUEST_PARAMS)),!n.authority){const r=this.generateAuthorityKey(e),o=this.getTemporaryCache(r);if(!o)throw C(qn);n.authority=o}return n}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(_.NATIVE_REQUEST,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${u.CACHE_PREFIX}.${_.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const t=`${u.CACHE_PREFIX}.${_.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw C(Vo);this.setTemporaryCache(t,this.clientId,!1)}else!e&&this.getInteractionInProgress()===this.clientId&&this.removeTemporaryItem(t)}getLegacyLoginHint(){const e=this.getTemporaryCache(H.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(H.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(H.ID_TOKEN,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(H.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const n=t||e;if(n){const r=Ne(n,ce);if(r.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),r.preferred_username;if(r.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),r.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const n=Ke(t);if(e!==n){const r=this.getItem(e);if(r)return this.browserStorage.removeItem(e),this.setItem(n,r),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),n;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){var a,c,h;const n=Nt((a=e.account)==null?void 0:a.homeAccountId,(c=e.account)==null?void 0:c.environment,e.idToken,this.clientId,e.tenantId);let r;t.claims&&(r=await this.cryptoImpl.hashString(t.claims));const o=Mt((h=e.account)==null?void 0:h.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,ce,void 0,e.tokenType,void 0,t.sshKid,t.claims,r),s={idToken:n,accessToken:o};return this.saveCacheRecord(s)}async saveCacheRecord(e,t,n){try{await super.saveCacheRecord(e,t,n)}catch(r){if(r instanceof Be&&this.performanceClient&&n)try{const o=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:o.refreshToken.length,cacheIdCount:o.idToken.length,cacheAtCount:o.accessToken.length},n)}catch{}throw r}}}const Dc=(i,e)=>{const t={cacheLocation:$.MemoryStorage,temporaryCacheLocation:$.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new gn(i,t,vt,e)};/*! @azure/msal-browser v3.28.1 2025-01-14 */function Hc(i,e,t,n){return i.verbose("getAllAccounts called"),t?e.getAllAccounts(n):[]}function Kc(i,e,t){if(e.trace("getAccount called"),Object.keys(i).length===0)return e.warning("getAccount: No accountFilter provided"),null;const n=t.getAccountInfoFilteredBy(i);return n?(e.verbose("getAccount: Account matching provided filter found, returning"),n):(e.verbose("getAccount: No matching account found, returning null"),null)}function xc(i,e,t){if(e.trace("getAccountByUsername called"),!i)return e.warning("getAccountByUsername: No username provided"),null;const n=t.getAccountInfoFilteredBy({username:i});return n?(e.verbose("getAccountByUsername: Account matching username found, returning"),e.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${i}`),n):(e.verbose("getAccountByUsername: No matching account found, returning null"),null)}function Fc(i,e,t){if(e.trace("getAccountByHomeId called"),!i)return e.warning("getAccountByHomeId: No homeAccountId provided"),null;const n=t.getAccountInfoFilteredBy({homeAccountId:i});return n?(e.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),e.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${i}`),n):(e.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function Bc(i,e,t){if(e.trace("getAccountByLocalId called"),!i)return e.warning("getAccountByLocalId: No localAccountId provided"),null;const n=t.getAccountInfoFilteredBy({localAccountId:i});return n?(e.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),e.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${i}`),n):(e.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function Gc(i,e){e.setActiveAccount(i)}function qc(i){return i.getActiveAccount()}/*! @azure/msal-browser v3.28.1 2025-01-14 */const A={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};/*! @azure/msal-browser v3.28.1 2025-01-14 */class $c{constructor(e){this.eventCallbacks=new Map,this.logger=e||new Ie({})}addEventCallback(e,t,n){if(typeof window<"u"){const r=n||Ec();return this.eventCallbacks.has(r)?(this.logger.error(`Event callback with id: ${r} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(r,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${r}`),r)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,n,r){if(typeof window<"u"){const o={eventType:e,interactionType:t||null,payload:n||null,error:r||null,timestamp:Date.now()};this.eventCallbacks.forEach(([s,a],c)=>{(a.length===0||a.includes(e))&&(this.logger.verbose(`Emitting event to callback ${c}: ${e}`),s.apply(null,[o]))})}}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class ki{constructor(e,t,n,r,o,s,a,c,h){this.config=e,this.browserStorage=t,this.browserCrypto=n,this.networkClient=this.config.system.networkClient,this.eventHandler=o,this.navigationClient=s,this.nativeMessageHandler=c,this.correlationId=h||pe(),this.logger=r.clone(j.MSAL_SKU,Gt,this.correlationId),this.performanceClient=a}async clearCacheOnLogout(e){if(e){D.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(D.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch{this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch{this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return S.getAbsoluteUrl(t,ge())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const n={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new ot(n,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,n=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(l.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const r={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.requestAuthority||this.config.auth.authority,s=n!=null&&n.length?n==="true":this.config.auth.instanceAware,a=t&&s?this.config.auth.authority.replace(S.getDomainFromUrl(o),t.environment):o,c=B.generateAuthority(a,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),h=await p(Do,l.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(c,this.config.system.networkClient,this.browserStorage,r,this.logger,this.correlationId,this.performanceClient);if(t&&!h.isAlias(t.environment))throw b(Ro);return h}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const zc=32;async function Qc(i,e,t){i.addQueueMeasurement(l.GeneratePkceCodes,t);const n=Me(Vc,l.GenerateCodeVerifier,e,i,t)(i,e,t),r=await p(Yc,l.GenerateCodeChallengeFromVerifier,e,i,t)(n,i,e,t);return{verifier:n,challenge:r}}function Vc(i,e,t){try{const n=new Uint8Array(zc);return Me(cc,l.GetRandomValues,e,i,t)(n),Bt(n)}catch{throw C(Bn)}}async function Yc(i,e,t,n){e.addQueueMeasurement(l.GenerateCodeChallengeFromVerifier,n);try{const r=await p(Ei,l.Sha256Digest,t,e,n)(i,e,n);return Bt(new Uint8Array(r))}catch{throw C(Bn)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */async function er(i,e,t,n){t.addQueueMeasurement(l.InitializeBaseRequest,i.correlationId);const r=i.authority||e.auth.authority,o=[...i&&i.scopes||[]],s={...i,correlationId:i.correlationId,authority:r,scopes:o};if(!s.authenticationScheme)s.authenticationScheme=R.BEARER,n.verbose(`Authentication Scheme wasn't explicitly set in request, defaulting to "Bearer" request`);else{if(s.authenticationScheme===R.SSH){if(!i.sshJwk)throw b(Ut);if(!i.sshKid)throw b(wo)}n.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}return e.cache.claimsBasedCachingEnabled&&i.claims&&!ee.isEmptyObj(i.claims)&&(s.requestedClaimsHash=await Ii(i.claims)),s}async function jc(i,e,t,n,r){n.addQueueMeasurement(l.InitializeSilentRequest,i.correlationId);const o=await p(er,l.InitializeBaseRequest,r,n,i.correlationId)(i,t,n,r);return{...i,...o,account:e,forceRefresh:i.forceRefresh||!1}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class We extends ki{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(l.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);const t=await p(Qc,l.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...e,redirectUri:e.redirectUri,code:u.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=u.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e==null?void 0:e.correlationId);const t={correlationId:this.correlationId||pe(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const n=this.getLogoutHintFromIdTokenClaims(e.account);n&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=n)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return!e||e.postLogoutRedirectUri!==null?e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(e.postLogoutRedirectUri,ge())):this.config.auth.postLogoutRedirectUri===null?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,ge())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(ge(),ge())):this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(l.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const t=await p(this.getClientConfiguration.bind(this),l.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e);return new xo(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:n,requestAzureCloudOptions:r,requestExtraQueryParameters:o,account:s}=e;this.performanceClient.addQueueMeasurement(l.StandardInteractionClientGetClientConfiguration,this.correlationId);const a=await p(this.getDiscoveredAuthority.bind(this),l.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:r,requestExtraQueryParameters:o,account:s}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:a,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:j.MSAL_SKU,version:Gt,cpu:u.EMPTY_STRING,os:u.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(l.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(e.redirectUri),r={interactionType:t},o=te.setRequestState(this.browserCrypto,e&&e.state||u.EMPTY_STRING,r),a={...await p(er,l.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:o,nonce:e.nonce||pe(),responseMode:this.config.auth.OIDCOptions.serverResponseType};if(e.loginHint||e.sid)return a;const c=e.account||this.browserStorage.getActiveAccount();if(c&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${c.homeAccountId}`,this.correlationId),a.account=c),!a.loginHint&&!c){const h=this.browserStorage.getLegacyLoginHint();h&&(a.loginHint=h)}return a}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Wc="ContentError",bi="user_switch";/*! @azure/msal-browser v3.28.1 2025-01-14 */const Jc="USER_INTERACTION_REQUIRED",Xc="USER_CANCEL",Zc="NO_NETWORK",eh="PERSISTENT_ERROR",th="DISABLED",nh="ACCOUNT_UNAVAILABLE";/*! @azure/msal-browser v3.28.1 2025-01-14 */const rh=-2147186943,oh={[bi]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class se extends N{constructor(e,t,n){super(e,t),Object.setPrototypeOf(this,se.prototype),this.name="NativeAuthError",this.ext=n}}function He(i){if(i.ext&&i.ext.status&&(i.ext.status===eh||i.ext.status===th)||i.ext&&i.ext.error&&i.ext.error===rh)return!0;switch(i.errorCode){case Wc:return!0;default:return!1}}function fn(i,e,t){if(t&&t.status)switch(t.status){case nh:return sn(Ho);case Jc:return new ne(i,e);case Xc:return C(Oe);case Zc:return C(bt)}return new se(i,oh[i]||e,t)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Oi extends We{async acquireToken(e){this.performanceClient.addQueueMeasurement(l.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(O.acquireTokenSilent_silentFlow),n=await p(this.getClientConfiguration.bind(this),l.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),r=new Fa(n,this.performanceClient);this.logger.verbose("Silent auth client created");try{const s=(await p(r.acquireCachedToken.bind(r),l.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),s}catch(o){throw o instanceof at&&o.errorCode===$n&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),o}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t==null?void 0:t.account)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ge extends ki{constructor(e,t,n,r,o,s,a,c,h,d,g,m){var I;super(e,t,n,r,o,s,c,h,m),this.apiId=a,this.accountId=d,this.nativeMessageHandler=h,this.nativeStorageManager=g,this.silentCacheClient=new Oi(e,this.nativeStorageManager,n,r,o,s,c,h,m),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);const y=this.nativeMessageHandler.getExtensionId()===Fe.PREFERRED_EXTENSION_ID?"chrome":(I=this.nativeMessageHandler.getExtensionId())!=null&&I.length?"unknown":void 0;this.skus=ot.makeExtraSkuString({libraryName:j.MSAL_SKU,libraryVersion:Gt,extensionName:y,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[va]:this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(l.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(l.NativeInteractionClientAcquireToken,e.correlationId),n=he();try{const r=await this.initializeNativeRequest(e);try{const h=await this.acquireTokensFromCache(this.accountId,r);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),h}catch{this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const{...o}=r,s={method:Se.GetToken,request:o},a=await this.nativeMessageHandler.sendMessage(s),c=this.validateNativeResponse(a);return await this.handleNativeResponse(c,r,n).then(h=>(t.end({success:!0,isNativeBroker:!0,requestId:h.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),h)).catch(h=>{throw t.end({success:!1,errorCode:h.errorCode,subErrorCode:h.subError,isNativeBroker:!0}),h})}catch(r){throw r instanceof se&&this.serverTelemetryManager.setNativeBrokerErrorCode(r.errorCode),r}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:U.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),f(Zt);const n=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!n)throw f(Zt);try{const r=this.createSilentCacheRequest(t,n),o=await this.silentCacheClient.acquireToken(r),s={...n,idTokenClaims:o==null?void 0:o.idTokenClaims,idToken:o==null?void 0:o.idToken};return{...o,account:s}}catch(r){throw r}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...n}=e;delete n.onRedirectNavigate;const r=await this.initializeNativeRequest(n),o={method:Se.GetToken,request:r};try{const c=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(c)}catch(c){if(c instanceof se&&(this.serverTelemetryManager.setNativeBrokerErrorCode(c.errorCode),He(c)))throw c}this.browserStorage.setTemporaryCache(_.NATIVE_REQUEST,JSON.stringify(r),!0);const s={apiId:O.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},a=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(a,s)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const n=this.browserStorage.getCachedNativeRequest();if(!n)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&(e==null||e.addFields({errorCode:"no_cached_request"},t)),null;const{prompt:r,...o}=n;r&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_.NATIVE_REQUEST));const s={method:Se.GetToken,request:o},a=he();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const c=await this.nativeMessageHandler.sendMessage(s);this.validateNativeResponse(c);const h=this.handleNativeResponse(c,o,a);this.browserStorage.setInteractionInProgress(!1);const d=await h;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),d}catch(c){throw this.browserStorage.setInteractionInProgress(!1),c}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,n){var d;this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const r=Ne(e.id_token,ce),o=this.createHomeAccountIdentifier(e,r),s=(d=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId}))==null?void 0:d.homeAccountId;if(o!==s&&e.account.id!==t.accountId)throw fn(bi);const a=await this.getDiscoveredAuthority({requestAuthority:t.authority}),c=Kn(this.browserStorage,a,o,ce,r,e.client_info,void 0,r.tid,void 0,e.account.id,this.logger),h=await this.generateAuthenticationResult(e,t,r,c,a.canonicalAuthority,n);return this.cacheAccount(c),this.cacheNativeTokens(e,t,o,r,e.access_token,h.tenantId,n),h}createHomeAccountIdentifier(e,t){return D.generateHomeAccountId(e.client_info||u.EMPTY_STRING,Z.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?U.fromString(e.scope):U.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===R.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const n=new Qe(this.browserCrypto),r={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw f(vn);return n.signPopToken(e.access_token,t.keyId,r)}else return e.access_token}async generateAuthenticationResult(e,t,n,r,o,s){const a=this.addTelemetryFromNativeResponse(e),c=e.scope?U.fromString(e.scope):U.fromString(t.scope),h=e.account.properties||{},d=h.UID||n.oid||n.sub||u.EMPTY_STRING,g=h.TenantId||n.tid||u.EMPTY_STRING,m=Nn(r.getAccountInfo(),void 0,n,e.id_token);m.nativeAccountId!==e.account.id&&(m.nativeAccountId=e.account.id);const y=await this.generatePopAccessToken(e,t),I=t.tokenType===R.POP?R.POP:R.BEARER;return{authority:o,uniqueId:d,tenantId:g,scopes:c.asArray(),account:m,idToken:e.id_token,idTokenClaims:n,accessToken:y,fromCache:a?this.isResponseFromCache(a):!1,expiresOn:new Date(Number(s+e.expires_in)*1e3),tokenType:I,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(t=>{this.logger.error(`Error occurred while removing account context from browser storage. ${t}`)})}cacheNativeTokens(e,t,n,r,o,s,a){const c=Nt(n,t.authority,e.id_token||"",t.clientId,r.tid||""),h=t.tokenType===R.POP?u.SHR_NONCE_VALIDITY:(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,d=a+h,g=this.generateScopes(e,t),m=Mt(n,t.authority,o,t.clientId,r.tid||s,g.printScopes(),d,0,ce,void 0,t.tokenType,void 0,t.keyId),y={idToken:c,accessToken:m};this.nativeStorageManager.saveCacheRecord(y,t.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw Qr(Cn,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch{this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return typeof e.is_cached>"u"?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const n=new S(t);n.validateAsUri();const{scopes:r,...o}=e,s=new U(r||[]);s.appendScopes(je);const a=()=>{switch(this.apiId){case O.ssoSilent:case O.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),K.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case K.NONE:case K.CONSENT:case K.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),C(gi)}},c={...o,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:s.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:a(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(c.signPopToken&&e.popKid)throw C(pi);if(this.handleExtraBrokerParams(c),c.extraParameters=c.extraParameters||{},c.extraParameters.telemetry=Fe.MATS_TELEMETRY,e.authenticationScheme===R.POP){const h={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},d=new Qe(this.browserCrypto);let g;if(c.keyId)g=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:c.keyId})),c.signPopToken=!1;else{const m=await p(d.generateCnf.bind(d),l.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(h,this.logger);g=m.reqCnfString,c.keyId=m.kid,c.signPopToken=!0}c.reqCnf=g}return this.addRequestSKUs(c),c}handleExtraBrokerParams(e){var o;const t=e.extraParameters&&e.extraParameters.hasOwnProperty(Ln)&&e.extraParameters.hasOwnProperty(on)&&e.extraParameters.hasOwnProperty(ke);if(!e.embeddedClientId&&!t)return;let n="";const r=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,n=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters[on],n=e.extraParameters[ke]),e.extraParameters={child_client_id:n,child_redirect_uri:r},(o=this.performanceClient)==null||o.addFields({embeddedClientId:n,embeddedRedirectUri:r},e.correlationId)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class ae{constructor(e,t,n,r){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=r,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=n,this.handshakeEvent=n.startMeasurement(l.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:Fe.CHANNEL_ID,extensionId:this.extensionId,responseId:pe(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((n,r)=>{this.resolvers.set(t.responseId,{resolve:n,reject:r})})}static async createProvider(e,t,n){e.trace("NativeMessageHandler - createProvider called.");try{const r=new ae(e,t,n,Fe.PREFERRED_EXTENSION_ID);return await r.sendHandshakeRequest(),r}catch{const o=new ae(e,t,n);return await o.sendHandshakeRequest(),o}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:Fe.CHANNEL_ID,extensionId:this.extensionId,responseId:pe(),body:{method:Se.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=t=>{this.onChannelMessage(t)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,n)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:n}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),n(C(di)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(!(!t.channel||t.channel!==Fe.CHANNEL_ID)&&!(t.extensionId&&t.extensionId!==this.extensionId)&&t.body.method===Se.HandshakeRequest){const n=this.handshakeResolvers.get(t.responseId);if(!n){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),n.reject(C(li))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,n=this.resolvers.get(t.responseId),r=this.handshakeResolvers.get(t.responseId);try{const o=t.body.method;if(o===Se.Response){if(!n)return;const s=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(s)}`),s.status!=="Success")n.reject(fn(s.code,s.description,s.ext));else if(s.result)s.result.code&&s.result.description?n.reject(fn(s.result.code,s.result.description,s.result.ext)):n.resolve(s.result);else throw Qr(Cn,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(o===Se.HandshakeResponse){if(!r){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),r.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(o){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${o}`),this.logger.errorPii(`Unable to parse ${e}`),n?n.reject(o):r&&r.reject(o)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,n,r){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!n)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(r)switch(r){case R.BEARER:case R.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class tr{constructor(e,t,n,r,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=r,this.performanceClient=o}async handleCodeResponse(e,t){this.performanceClient.addQueueMeasurement(l.HandleCodeResponse,t.correlationId);let n;try{n=this.authModule.handleFragmentResponse(e,t.state)}catch(r){throw r instanceof ve&&r.subError===Oe?C(Oe):r}return p(this.handleCodeResponseFromServer.bind(this),l.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(n,t)}async handleCodeResponseFromServer(e,t,n=!0){if(this.performanceClient.addQueueMeasurement(l.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await p(this.authModule.updateAuthority.bind(this.authModule),l.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),n&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const o=this.createCcsCredentials(t);o&&(this.authCodeRequest.ccsCredential=o)}return await p(this.authModule.acquireToken.bind(this.authModule),l.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:W.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:W.UPN}:null}}/*! @azure/msal-browser v3.28.1 2025-01-14 */function Pi(i,e,t){const n=_t(i);if(!n)throw bo(i)?(t.error(`A ${e} is present in the iframe but it does not contain known properties. It's likely that the ${e} has been replaced by code running on the redirectUri page.`),t.errorPii(`The ${e} detected is: ${i}`),C($o)):(t.error(`The request has returned to the redirectUri but a ${e} is not present. It's likely that the ${e} has been removed or the page has been redirected by code running on the redirectUri page.`),C(qo));return n}function ih(i,e,t){if(!i.state)throw C(Gn);const n=Ri(e,i.state);if(!n)throw C(zo);if(n.interactionType!==t)throw C(Qo)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class sh extends We{constructor(e,t,n,r,o,s,a,c,h,d){super(e,t,n,r,o,s,a,h,d),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=c}acquireToken(e){try{const n={popupName:this.generatePopupName(e.scopes||je,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,n)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),n.popup=this.openSizedPopup("about:blank",n),this.acquireTokenPopupAsync(e,n))}catch(t){return Promise.reject(t)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),n={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:(e==null?void 0:e.popupWindowAttributes)||{},popupWindowParent:(e==null?void 0:e.popupWindowParent)??window},r=e&&e.authority,o=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,n,r,o)):(this.logger.verbose("asyncPopup set to false, opening popup"),n.popup=this.openSizedPopup("about:blank",n),this.logoutPopupAsync(t,n,r,o))}catch(t){return Promise.reject(t)}}async acquireTokenPopupAsync(e,t){var o;this.logger.verbose("acquireTokenPopupAsync called");const n=this.initializeServerTelemetryManager(O.acquireTokenPopup),r=await p(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,T.Popup);_i(r.authority);try{const s=await p(this.initializeAuthorizationCodeRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(r),a=await p(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:r.authority,requestAzureCloudOptions:r.azureCloudOptions,requestExtraQueryParameters:r.extraQueryParameters,account:r.account}),c=ae.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let h;c&&(h=this.performanceClient.startMeasurement(l.FetchAccountIdWithNativeBroker,e.correlationId));const d=await a.getAuthCodeUrl({...r,nativeBroker:c}),g=new tr(a,this.browserStorage,s,this.logger,this.performanceClient),m=this.initiateAuthRequest(d,t);this.eventHandler.emitEvent(A.POPUP_OPENED,T.Popup,{popupWindow:m},null);const y=await this.monitorPopupForHash(m,t.popupWindowParent),I=Me(Pi,l.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(y,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(ie.removeThrottle(this.browserStorage,this.config.auth.clientId,s),I.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),h&&h.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw C(st);const L=new Ge(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,I.accountId,this.nativeStorage,r.correlationId),{userRequestState:F}=te.parseRequestState(this.browserCrypto,r.state);return await L.acquireToken({...r,state:F,prompt:void 0})}return await g.handleCodeResponse(I,r)}catch(s){throw(o=t.popup)==null||o.close(),s instanceof N&&(s.setCorrelationId(this.correlationId),n.cacheFailedRequest(s)),s}}async logoutPopupAsync(e,t,n,r){var s,a,c,h;this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(A.LOGOUT_START,T.Popup,e);const o=this.initializeServerTelemetryManager(O.logoutPopup);try{await this.clearCacheOnLogout(e.account);const d=await p(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:o,requestAuthority:n,account:e.account||void 0});try{d.authority.endSessionEndpoint}catch{if((s=e.account)!=null&&s.homeAccountId&&e.postLogoutRedirectUri&&d.authority.protocolMode===fe.OIDC){if(this.browserStorage.removeAccount((a=e.account)==null?void 0:a.homeAccountId),this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,T.Popup,e),r){const y={apiId:O.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},I=S.getAbsoluteUrl(r,ge());await this.navigationClient.navigateInternal(I,y)}(c=t.popup)==null||c.close();return}}const g=d.getLogoutUri(e);this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,T.Popup,e);const m=this.openPopup(g,t);if(this.eventHandler.emitEvent(A.POPUP_OPENED,T.Popup,{popupWindow:m},null),await this.monitorPopupForHash(m,t.popupWindowParent).catch(()=>{}),r){const y={apiId:O.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},I=S.getAbsoluteUrl(r,ge());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${I}`),await this.navigationClient.navigateInternal(I,y)}else this.logger.verbose("No main window navigation requested")}catch(d){throw(h=t.popup)==null||h.close(),d instanceof N&&(d.setCorrelationId(this.correlationId),o.cacheFailedRequest(d)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(A.LOGOUT_FAILURE,T.Popup,null,d),this.eventHandler.emitEvent(A.LOGOUT_END,T.Popup),d}this.eventHandler.emitEvent(A.LOGOUT_END,T.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),C(Kt)}monitorPopupForHash(e,t){return new Promise((n,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const o=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(o),r(C(Oe));return}let s="";try{s=e.location.href}catch{}if(!s||s==="about:blank")return;clearInterval(o);let a="";const c=this.config.auth.OIDCOptions.serverResponseType;e&&(c===it.QUERY?a=e.location.search:a=e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),n(a)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let n;if(t.popup?(n=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),n.location.assign(e)):typeof t.popup>"u"&&(this.logger.verbosePii(`Opening popup window to: ${e}`),n=this.openSizedPopup(e,t)),!n)throw C(jo);return n.focus&&n.focus(),this.currentWindow=n,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),n}catch(n){throw this.logger.error("error opening popup "+n.message),this.browserStorage.setInteractionInProgress(!1),C(Yo)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:n,popupWindowParent:r}){var y,I,v,L;const o=r.screenLeft?r.screenLeft:r.screenX,s=r.screenTop?r.screenTop:r.screenY,a=r.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,c=r.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let h=(y=n.popupSize)==null?void 0:y.width,d=(I=n.popupSize)==null?void 0:I.height,g=(v=n.popupPosition)==null?void 0:v.top,m=(L=n.popupPosition)==null?void 0:L.left;return(!h||h<0||h>a)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),h=j.POPUP_WIDTH),(!d||d<0||d>c)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),d=j.POPUP_HEIGHT),(!g||g<0||g>c)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),g=Math.max(0,c/2-j.POPUP_HEIGHT/2+s)),(!m||m<0||m>a)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),m=Math.max(0,a/2-j.POPUP_WIDTH/2+o)),r.open(e,t,`width=${h}, height=${d}, top=${g}, left=${m}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(T.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${j.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${j.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Hr{constructor(e,t,n,r,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=r,this.performanceClient=o}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(_.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(_.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const n={apiId:O.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if(typeof t.onRedirectNavigate=="function")if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),t.onRedirectNavigate(e)!==!1){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,n);return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,n);return}}else throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),C(Kt)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const n=this.browserStorage.generateStateKey(t),r=this.browserStorage.getTemporaryCache(n);if(!r)throw f(It,"Cached State");let o;try{o=this.authModule.handleFragmentResponse(e,r)}catch(h){throw h instanceof ve&&h.subError===Oe?C(Oe):h}const s=this.browserStorage.generateNonceKey(r),a=this.browserStorage.getTemporaryCache(s);if(this.authCodeRequest.code=o.code,o.cloud_instance_host_name&&await p(this.authModule.updateAuthority.bind(this.authModule),l.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(o.cloud_instance_host_name,this.authCodeRequest.correlationId),o.nonce=a||void 0,o.state=r,o.client_info)this.authCodeRequest.clientInfo=o.client_info;else{const h=this.checkCcsCredentials();h&&(this.authCodeRequest.ccsCredential=h)}const c=await this.authModule.acquireToken(this.authCodeRequest,o);return this.browserStorage.cleanRequestByState(t),c}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(_.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch{this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}/*! @azure/msal-browser v3.28.1 2025-01-14 */function ah(){if(typeof window>"u"||typeof window.performance>"u"||typeof window.performance.getEntriesByType!="function")return;const i=window.performance.getEntriesByType("navigation"),e=i.length?i[0]:void 0;return e==null?void 0:e.type}class ch extends We{constructor(e,t,n,r,o,s,a,c,h,d){super(e,t,n,r,o,s,a,h,d),this.nativeStorage=c}async acquireToken(e){const t=await p(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,T.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const n=this.initializeServerTelemetryManager(O.acquireTokenRedirect),r=o=>{o.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(A.RESTORE_FROM_BFCACHE,T.Redirect))};try{const o=await p(this.initializeAuthorizationCodeRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),s=await p(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),a=new Hr(s,this.browserStorage,o,this.logger,this.performanceClient),c=await s.getAuthCodeUrl({...t,nativeBroker:ae.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),h=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${h}`),window.addEventListener("pageshow",r),await a.initiateAuthRequest(c,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:h,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),window.removeEventListener("pageshow",r),this.browserStorage.cleanRequestByState(t.state),o}}async handleRedirectPromise(e="",t){const n=this.initializeServerTelemetryManager(O.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[r,o]=this.getRedirectResponse(e||"");if(!r)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(T.Redirect),ah()!=="back_forward"?t.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const s=this.browserStorage.getTemporaryCache(_.ORIGIN_URI,!0)||u.EMPTY_STRING,a=S.removeHashFromUrl(s),c=S.removeHashFromUrl(window.location.href);if(a===c&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),s.indexOf("#")>-1&&pc(s),await this.handleResponse(r,n);if(this.config.auth.navigateToLoginRequestUrl){if(!Jn()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(_.URL_HASH,o,!0);const h={apiId:O.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let d=!0;if(!s||s==="null"){const g=Cc();this.browserStorage.setTemporaryCache(_.ORIGIN_URI,g,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),d=await this.navigationClient.navigateInternal(g,h)}else this.logger.verbose(`Navigating to loginRequestUrl: ${s}`),d=await this.navigationClient.navigateInternal(s,h);if(!d)return await this.handleResponse(r,n)}}else return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(r,n);return null}catch(r){throw r instanceof N&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),this.browserStorage.cleanRequestByInteractionType(T.Redirect),r}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(this.config.auth.OIDCOptions.serverResponseType===it.QUERY?t=window.location.search:t=window.location.hash);let n=_t(t);if(n){try{ih(n,this.browserCrypto,T.Redirect)}catch(o){return o instanceof N&&this.logger.error(`Interaction type validation failed due to ${o.errorCode}: ${o.errorMessage}`),[null,""]}return fc(window),this.logger.verbose("Hash contains known properties, returning response hash"),[n,t]}const r=this.browserStorage.getTemporaryCache(_.URL_HASH,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_.URL_HASH)),r&&(n=_t(r),n)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,r]):[null,""]}async handleResponse(e,t){const n=e.state;if(!n)throw C(Gn);const r=this.browserStorage.getCachedRequest(n);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw C(st);const c=new Ge(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,r.correlationId),{userRequestState:h}=te.parseRequestState(this.browserCrypto,n);return c.acquireToken({...r,state:h,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(n)})}const o=this.browserStorage.getCachedAuthority(n);if(!o)throw C(qn);const s=await p(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:o});return ie.removeThrottle(this.browserStorage,this.config.auth.clientId,r),new Hr(s,this.browserStorage,r,this.logger,this.performanceClient).handleCodeResponse(e,n)}async logout(e){var r,o;this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(O.logout);try{this.eventHandler.emitEvent(A.LOGOUT_START,T.Redirect,e),await this.clearCacheOnLogout(t.account);const s={apiId:O.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},a=await p(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:e&&e.authority,requestExtraQueryParameters:e==null?void 0:e.extraQueryParameters,account:e&&e.account||void 0});if(a.authority.protocolMode===fe.OIDC)try{a.authority.endSessionEndpoint}catch{if((r=t.account)!=null&&r.homeAccountId){this.browserStorage.removeAccount((o=t.account)==null?void 0:o.homeAccountId),this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,T.Redirect,t);return}}const c=a.getLogoutUri(t);if(this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,T.Redirect,t),e&&typeof e.onRedirectNavigate=="function")if(e.onRedirectNavigate(c)!==!1){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(c,s);return}else this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation");else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(c,s);return}}catch(s){throw s instanceof N&&(s.setCorrelationId(this.correlationId),n.cacheFailedRequest(s)),this.eventHandler.emitEvent(A.LOGOUT_FAILURE,T.Redirect,null,s),this.eventHandler.emitEvent(A.LOGOUT_END,T.Redirect),s}this.eventHandler.emitEvent(A.LOGOUT_END,T.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return S.getAbsoluteUrl(t,ge())}}/*! @azure/msal-browser v3.28.1 2025-01-14 */async function hh(i,e,t,n,r){if(e.addQueueMeasurement(l.SilentHandlerInitiateAuthRequest,n),!i)throw t.info("Navigate url is empty"),C(Kt);return r?p(lh,l.SilentHandlerLoadFrame,t,e,n)(i,r,e,n):Me(uh,l.SilentHandlerLoadFrameSync,t,e,n)(i)}async function dh(i,e,t,n,r,o,s){return n.addQueueMeasurement(l.SilentHandlerMonitorIframeForHash,o),new Promise((a,c)=>{e<ln&&r.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${e}ms) than the default (${ln}ms). This may result in timeouts.`);const h=window.setTimeout(()=>{window.clearInterval(d),c(C(Wo))},e),d=window.setInterval(()=>{let g="";const m=i.contentWindow;try{g=m?m.location.href:""}catch{}if(!g||g==="about:blank")return;let y="";m&&(s===it.QUERY?y=m.location.search:y=m.location.hash),window.clearTimeout(h),window.clearInterval(d),a(y)},t)}).finally(()=>{Me(gh,l.RemoveHiddenIframe,r,n,o)(i)})}function lh(i,e,t,n){return t.addQueueMeasurement(l.SilentHandlerLoadFrame,n),new Promise((r,o)=>{const s=Ni();window.setTimeout(()=>{if(!s){o("Unable to load iframe");return}s.src=i,r(s)},e)})}function uh(i){const e=Ni();return e.src=i,e}function Ni(){const i=document.createElement("iframe");return i.className="msalSilentIframe",i.style.visibility="hidden",i.style.position="absolute",i.style.width=i.style.height="0",i.style.border="0",i.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(i),i}function gh(i){document.body===i.parentNode&&document.body.removeChild(i)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class fh extends We{constructor(e,t,n,r,o,s,a,c,h,d,g){super(e,t,n,r,o,s,c,d,g),this.apiId=a,this.nativeStorage=h}async acquireToken(e){this.performanceClient.addQueueMeasurement(l.SilentIframeClientAcquireToken,e.correlationId),!e.loginHint&&!e.sid&&(!e.account||!e.account.username)&&this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==K.NONE&&t.prompt!==K.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${K.NONE}`),t.prompt=K.NONE):t.prompt=K.NONE;const n=await p(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,T.Silent);_i(n.authority);const r=this.initializeServerTelemetryManager(this.apiId);let o;try{return o=await p(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),await p(this.silentTokenHelper.bind(this),l.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(o,n)}catch(s){if(s instanceof N&&(s.setCorrelationId(this.correlationId),r.cacheFailedRequest(s)),!o||!(s instanceof N)||s.errorCode!==j.INVALID_GRANT_ERROR)throw s;this.performanceClient.addFields({retryError:s.errorCode},this.correlationId);const a=await p(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,T.Silent);return await p(this.silentTokenHelper.bind(this),l.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(o,a)}}logout(){return Promise.reject(C(xt))}async silentTokenHelper(e,t){const n=t.correlationId;this.performanceClient.addQueueMeasurement(l.SilentIframeClientTokenHelper,n);const r=await p(this.initializeAuthorizationCodeRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,n)(t),o=await p(e.getAuthCodeUrl.bind(e),l.GetAuthCodeUrl,this.logger,this.performanceClient,n)({...t,nativeBroker:ae.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),s=new tr(e,this.browserStorage,r,this.logger,this.performanceClient),a=await p(hh,l.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,n)(o,this.performanceClient,this.logger,n,this.config.system.navigateFrameWait),c=this.config.auth.OIDCOptions.serverResponseType,h=await p(dh,l.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,n)(a,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,n,c),d=Me(Pi,l.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(h,c,this.logger);if(d.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw C(st);const g=new Ge(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,d.accountId,this.browserStorage,n),{userRequestState:m}=te.parseRequestState(this.browserCrypto,t.state);return p(g.acquireToken.bind(g),l.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,n)({...t,state:m,prompt:t.prompt||K.NONE})}return p(s.handleCodeResponse.bind(s),l.HandleCodeResponse,this.logger,this.performanceClient,n)(d,t)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class ph extends We{async acquireToken(e){this.performanceClient.addQueueMeasurement(l.SilentRefreshClientAcquireToken,e.correlationId);const t=await p(er,l.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),n={...e,...t};e.redirectUri&&(n.redirectUri=this.getRedirectUri(e.redirectUri));const r=this.initializeServerTelemetryManager(O.acquireTokenSilent_silentFlow),o=await this.createRefreshTokenClient({serverTelemetryManager:r,authorityUrl:n.authority,azureCloudOptions:n.azureCloudOptions,account:n.account});return p(o.acquireTokenByRefreshToken.bind(o),l.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(n).catch(s=>{throw s.setCorrelationId(this.correlationId),r.cacheFailedRequest(s),s})}logout(){return Promise.reject(C(xt))}async createRefreshTokenClient(e){const t=await p(this.getClientConfiguration.bind(this),l.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new an(t,this.performanceClient)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class mh{constructor(e,t,n,r){this.isBrowserEnvironment=typeof window<"u",this.config=e,this.storage=t,this.logger=n,this.cryptoObj=r}loadExternalTokens(e,t,n){if(!this.isBrowserEnvironment)throw C(Ft);const r=t.id_token?Ne(t.id_token,ce):void 0,o={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},s=e.authority?new B(B.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,o,this.logger,e.correlationId||pe()):void 0,a=this.loadAccount(e,n.clientInfo||t.client_info||"",r,s),c=this.loadIdToken(t,a.homeAccountId,a.environment,a.realm),h=this.loadAccessToken(e,t,a.homeAccountId,a.environment,a.realm,n),d=this.loadRefreshToken(t,a.homeAccountId,a.environment);return this.generateAuthenticationResult(e,{account:a,idToken:c,accessToken:h,refreshToken:d},r,s)}loadAccount(e,t,n,r){if(this.logger.verbose("TokenCache - loading account"),e.account){const c=D.createFromAccountInfo(e.account);return this.storage.setAccount(c),c}else if(!r||!t&&!n)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),C(ii);const o=D.generateHomeAccountId(t,r.authorityType,this.logger,this.cryptoObj,n),s=n==null?void 0:n.tid,a=Kn(this.storage,r,o,ce,n,t,r.hostnameAndPort,s,void 0,void 0,this.logger);return this.storage.setAccount(a),a}loadIdToken(e,t,n,r){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const o=Nt(t,n,e.id_token,this.config.auth.clientId,r);return this.storage.setIdTokenCredential(o),o}loadAccessToken(e,t,n,r,o,s){if(t.access_token)if(t.expires_in){if(!t.scope&&(!e.scopes||!e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null}else return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;else return this.logger.verbose("TokenCache - no access token found in response"),null;this.logger.verbose("TokenCache - loading access token");const a=t.scope?U.fromString(t.scope):new U(e.scopes),c=s.expiresOn||t.expires_in+new Date().getTime()/1e3,h=s.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+new Date().getTime()/1e3,d=Mt(n,r,t.access_token,this.config.auth.clientId,o,a.printScopes(),c,h,ce);return this.storage.setAccessTokenCredential(d),d}loadRefreshToken(e,t,n){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const r=go(t,n,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(r),r}generateAuthenticationResult(e,t,n,r){var d,g,m;let o="",s=[],a=null,c;t!=null&&t.accessToken&&(o=t.accessToken.secret,s=U.fromString(t.accessToken.target).asArray(),a=new Date(Number(t.accessToken.expiresOn)*1e3),c=new Date(Number(t.accessToken.extendedExpiresOn)*1e3));const h=t.account;return{authority:r?r.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:s,account:h.getAccountInfo(),idToken:((d=t.idToken)==null?void 0:d.secret)||"",idTokenClaims:n||{},accessToken:o,fromCache:!0,expiresOn:a,correlationId:e.correlationId||"",requestId:"",extExpiresOn:c,familyId:((g=t.refreshToken)==null?void 0:g.familyId)||"",tokenType:((m=t==null?void 0:t.accessToken)==null?void 0:m.tokenType)||"",state:e.state||"",cloudGraphHostName:h.cloudGraphHostName||"",msGraphHost:h.msGraphHost||"",fromNativeBroker:!1}}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ch extends xo{constructor(e){super(e),this.includeRedirectUri=!1}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class yh extends We{constructor(e,t,n,r,o,s,a,c,h,d){super(e,t,n,r,o,s,c,h,d),this.apiId=a}async acquireToken(e){if(!e.code)throw C(si);const t=await p(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,T.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const r={...t,code:e.code},o=await p(this.getClientConfiguration.bind(this),l.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),s=new Ch(o);this.logger.verbose("Auth code client created");const a=new tr(s,this.browserStorage,r,this.logger,this.performanceClient);return await p(a.handleCodeResponseFromServer.bind(a),l.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(r){throw r instanceof N&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),r}}logout(){return Promise.reject(C(xt))}}/*! @azure/msal-browser v3.28.1 2025-01-14 */function re(i){const e=i==null?void 0:i.idTokenClaims;if(e!=null&&e.tfp||e!=null&&e.acr)return"B2C";if(e!=null&&e.tid){if((e==null?void 0:e.tid)==="9188040d-6c67-4c5b-b112-36a304b66dad")return"MSA"}else return;return"AAD"}function Ct(i,e){try{Xn(i)}catch(t){throw e.end({success:!1},t),t}}class qt{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Ve(this.logger,this.performanceClient):vt,this.eventHandler=new $c(this.logger),this.browserStorage=this.isBrowserEnvironment?new gn(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,Oa(this.config.auth),this.performanceClient):Dc(this.config.auth.clientId,this.logger);const t={cacheLocation:$.MemoryStorage,temporaryCacheLocation:$.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new gn(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new mh(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this),this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}static async createController(e,t){const n=new qt(e);return await n.initialize(t),n}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}if(!this.isBrowserEnvironment){this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,this.eventHandler.emitEvent(A.INITIALIZE_END);return}const t=(e==null?void 0:e.correlationId)||this.getRequestCorrelationId(),n=this.config.system.allowNativeBroker,r=this.performanceClient.startMeasurement(l.InitializeClientApplication,t);if(this.eventHandler.emitEvent(A.INITIALIZE_START),n)try{this.nativeExtensionProvider=await ae.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(o){this.logger.verbose(o)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await p(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),l.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(A.INITIALIZE_END),r.end({allowNativeBroker:n,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),Si(this.initialized),this.isBrowserEnvironment){const t=e||"";let n=this.redirectResponse.get(t);return typeof n>"u"?(n=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,n),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),n}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){const t=this.getAllAccounts(),n=this.browserStorage.getCachedNativeRequest(),r=n&&ae.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,o=r?n==null?void 0:n.correlationId:this.browserStorage.getTemporaryCache(_.CORRELATION_ID,!0)||"",s=this.performanceClient.startMeasurement(l.AcquireTokenRedirect,o);this.eventHandler.emitEvent(A.HANDLE_REDIRECT_START,T.Redirect);let a;if(r&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");const c=new Ge(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,n.accountId,this.nativeInternalStorage,n.correlationId);a=p(c.handleRedirectPromise.bind(c),l.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(this.performanceClient,s.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const c=this.createRedirectClient(o);a=p(c.handleRedirectPromise.bind(c),l.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(e,s)}return a.then(c=>(c?(t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(A.LOGIN_SUCCESS,T.Redirect,c),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,T.Redirect,c),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),s.end({success:!0,accountType:re(c.account)})):s.event.errorCode?s.end({success:!1}):s.discard(),this.eventHandler.emitEvent(A.HANDLE_REDIRECT_END,T.Redirect),c)).catch(c=>{const h=c;throw t.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,T.Redirect,null,h):this.eventHandler.emitEvent(A.LOGIN_FAILURE,T.Redirect,null,h),this.eventHandler.emitEvent(A.HANDLE_REDIRECT_END,T.Redirect),s.end({success:!1},h),c})}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const n=this.performanceClient.startMeasurement(l.AcquireTokenPreRedirect,t);n.add({accountType:re(e.account),scenarioId:e.scenarioId});const r=e.onRedirectNavigate;if(r)e.onRedirectNavigate=s=>{const a=typeof r=="function"?r(s):void 0;return a!==!1?n.end({success:!0}):n.discard(),a};else{const s=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=a=>{const c=typeof s=="function"?s(a):void 0;return c!==!1?n.end({success:!0}):n.discard(),c}}const o=this.getAllAccounts().length>0;try{Mr(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),o?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,T.Redirect,e):this.eventHandler.emitEvent(A.LOGIN_START,T.Redirect,e);let s;return this.nativeExtensionProvider&&this.canUseNative(e)?s=new Ge(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,n).catch(c=>{if(c instanceof se&&He(c))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(c instanceof ne)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),c}):s=this.createRedirectClient(t).acquireToken(e),await s}catch(s){throw n.end({success:!1},s),o?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,T.Redirect,null,s):this.eventHandler.emitEvent(A.LOGIN_FAILURE,T.Redirect,null,s),s}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(l.AcquireTokenPopup,t);n.add({scenarioId:e.scenarioId,accountType:re(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),Ct(this.initialized,n),this.browserStorage.setInteractionInProgress(!0)}catch(s){return Promise.reject(s)}const r=this.getAllAccounts();r.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,T.Popup,e):this.eventHandler.emitEvent(A.LOGIN_START,T.Popup,e);let o;return this.canUseNative(e)?o=this.acquireTokenNative({...e,correlationId:t},O.acquireTokenPopup).then(s=>(this.browserStorage.setInteractionInProgress(!1),n.end({success:!0,isNativeBroker:!0,accountType:re(s.account)}),s)).catch(s=>{if(s instanceof se&&He(s))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(s instanceof ne)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),s}):o=this.createPopupClient(t).acquireToken(e),o.then(s=>(r.length<this.getAllAccounts().length?this.eventHandler.emitEvent(A.LOGIN_SUCCESS,T.Popup,s):this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,T.Popup,s),n.end({success:!0,accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length,accountType:re(s.account)}),s)).catch(s=>(r.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,T.Popup,null,s):this.eventHandler.emitEvent(A.LOGIN_FAILURE,T.Popup,null,s),n.end({success:!1},s),Promise.reject(s)))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){var o,s;const t=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:t};this.ssoSilentMeasurement=this.performanceClient.startMeasurement(l.SsoSilent,t),(o=this.ssoSilentMeasurement)==null||o.add({scenarioId:e.scenarioId,accountType:re(e.account)}),Ct(this.initialized,this.ssoSilentMeasurement),(s=this.ssoSilentMeasurement)==null||s.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(A.SSO_SILENT_START,T.Silent,n);let r;return this.canUseNative(n)?r=this.acquireTokenNative(n,O.ssoSilent).catch(a=>{if(a instanceof se&&He(a))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw a}):r=this.createSilentIframeClient(n.correlationId).acquireToken(n),r.then(a=>{var c;return this.eventHandler.emitEvent(A.SSO_SILENT_SUCCESS,T.Silent,a),(c=this.ssoSilentMeasurement)==null||c.end({success:!0,isNativeBroker:a.fromNativeBroker,accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length,accountType:re(a.account)}),a}).catch(a=>{var c;throw this.eventHandler.emitEvent(A.SSO_SILENT_FAILURE,T.Silent,null,a),(c=this.ssoSilentMeasurement)==null||c.end({success:!1},a),a}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const n=this.performanceClient.startMeasurement(l.AcquireTokenByCode,t);Ct(this.initialized,n),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_START,T.Silent,e),n.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw C(ci);if(e.code){const r=e.code;let o=this.hybridAuthCodeResponses.get(r);return o?(this.logger.verbose("Existing acquireTokenByCode request found",t),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),o=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(s=>(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_SUCCESS,T.Silent,s),this.hybridAuthCodeResponses.delete(r),n.end({success:!0,isNativeBroker:s.fromNativeBroker,accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length,accountType:re(s.account)}),s)).catch(s=>{throw this.hybridAuthCodeResponses.delete(r),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_FAILURE,T.Silent,null,s),n.end({success:!1},s),s}),this.hybridAuthCodeResponses.set(r,o)),await o}else if(e.nativeAccountId)if(this.canUseNative(e,e.nativeAccountId)){const r=await this.acquireTokenNative({...e,correlationId:t},O.acquireTokenByCode,e.nativeAccountId).catch(o=>{throw o instanceof se&&He(o)&&(this.nativeExtensionProvider=void 0),o});return n.end({accountType:re(r.account),success:!0}),r}else throw C(hi);else throw C(ai)}catch(r){throw this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_FAILURE,T.Silent,null,r),n.end({success:!1},r),r}}async acquireTokenByCodeAsync(e){var r;return this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(l.AcquireTokenByCodeAsync,e.correlationId),(r=this.acquireTokenByCodeAsyncMeasurement)==null||r.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),await this.createSilentAuthCodeClient(e.correlationId).acquireToken(e).then(o=>{var s;return(s=this.acquireTokenByCodeAsyncMeasurement)==null||s.end({success:!0,fromCache:o.fromCache,isNativeBroker:o.fromNativeBroker}),o}).catch(o=>{var s;throw(s=this.acquireTokenByCodeAsyncMeasurement)==null||s.end({success:!1},o),o}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(l.AcquireTokenFromCache,e.correlationId),t){case Q.Default:case Q.AccessToken:case Q.AccessTokenAndRefreshToken:const n=this.createSilentCacheClient(e.correlationId);return p(n.acquireToken.bind(n),l.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw f(ue)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(l.AcquireTokenByRefreshToken,e.correlationId),t){case Q.Default:case Q.AccessTokenAndRefreshToken:case Q.RefreshToken:case Q.RefreshTokenAndNetwork:const n=this.createSilentRefreshClient(e.correlationId);return p(n.acquireToken.bind(n),l.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw f(ue)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(l.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return p(t.acquireToken.bind(t),l.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return Mr(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return Xn(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(t){return Promise.reject(t)}}async clearCache(e){if(!this.isBrowserEnvironment){this.logger.info("in non-browser environment, returning early.");return}const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return Hc(this.logger,this.browserStorage,this.isBrowserEnvironment,e)}getAccount(e){return Kc(e,this.logger,this.browserStorage)}getAccountByUsername(e){return xc(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return Fc(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return Bc(e,this.logger,this.browserStorage)}setActiveAccount(e){Gc(e,this.browserStorage)}getActiveAccount(){return qc(this.browserStorage)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=D.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(n),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,n){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw C(st);return new Ge(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,n||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!ae.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case K.NONE:case K.CONSENT:case K.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!t&&!this.getNativeAccountId(e)?(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1):!0}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new sh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new ch(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new fh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new Oi(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new ph(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new yh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return wi(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}handleAccountCacheChange(e){var t;try{(t=e.key)!=null&&t.includes(H.ACTIVE_ACCOUNT_FILTERS)&&this.eventHandler.emitEvent(A.ACTIVE_ACCOUNT_CHANGED);const n=e.newValue||e.oldValue;if(!n)return;const r=JSON.parse(n);if(typeof r!="object"||!D.isAccountEntity(r))return;const s=ze.toObject(new D,r).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.eventHandler.emitEvent(A.ACCOUNT_ADDED,void 0,s)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.eventHandler.emitEvent(A.ACCOUNT_REMOVED,void 0,s))}catch{return}}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return e!=null&&e.correlationId?e.correlationId:this.isBrowserEnvironment?pe():u.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||Or})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||Or})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(l.AcquireTokenSilent,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),Ct(this.initialized,n),this.logger.verbose("acquireTokenSilent called",t);const r=e.account||this.getActiveAccount();if(!r)throw C(ei);n.add({accountType:re(r)});const o={clientId:this.config.auth.clientId,authority:e.authority||u.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:r.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions},s=JSON.stringify(o),a=this.activeSilentTokenRequests.get(s);if(typeof a>"u"){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);const c=p(this.acquireTokenSilentAsync.bind(this),l.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},r).then(h=>(this.activeSilentTokenRequests.delete(s),n.end({success:!0,fromCache:h.fromCache,isNativeBroker:h.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,accessTokenSize:h.accessToken.length,idTokenSize:h.idToken.length}),h)).catch(h=>{throw this.activeSilentTokenRequests.delete(s),n.end({success:!1},h),h});return this.activeSilentTokenRequests.set(s,c),{...await c,state:e.state}}else return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),n.discard(),{...await a,state:e.state}}async acquireTokenSilentAsync(e,t){const n=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(l.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,T.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",n);const r=await p(jc,l.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),o=e.cacheLookupPolicy||Q.Default;return this.acquireTokenSilentNoIframe(r,o).catch(async a=>{if(Th(a,o))if(this.activeIframeRequest)if(o!==Q.Skip){const[h,d]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${d}`,r.correlationId);const g=this.performanceClient.startMeasurement(l.AwaitConcurrentIframe,r.correlationId);g.add({awaitIframeCorrelationId:d});const m=await h;if(g.end({success:m}),m)return this.logger.verbose(`Parallel iframe request with correlationId: ${d} succeeded. Retrying cache and/or RT redemption`,r.correlationId),this.acquireTokenSilentNoIframe(r,o);throw this.logger.info(`Iframe request with correlationId: ${d} failed. Interaction is required.`),a}else return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",r.correlationId),p(this.acquireTokenBySilentIframe.bind(this),l.AcquireTokenBySilentIframe,this.logger,this.performanceClient,r.correlationId)(r);else{let h;return this.activeIframeRequest=[new Promise(d=>{h=d}),r.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",r.correlationId),p(this.acquireTokenBySilentIframe.bind(this),l.AcquireTokenBySilentIframe,this.logger,this.performanceClient,r.correlationId)(r).then(d=>(h(!0),d)).catch(d=>{throw h(!1),d}).finally(()=>{this.activeIframeRequest=void 0})}else throw a}).then(a=>(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,T.Silent,a),e.correlationId&&this.performanceClient.addFields({fromCache:a.fromCache,isNativeBroker:a.fromNativeBroker},e.correlationId),a)).catch(a=>{throw this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,T.Silent,null,a),a}).finally(()=>{document.removeEventListener("visibilitychange",n)})}async acquireTokenSilentNoIframe(e,t){return ae.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,O.acquireTokenSilent_silentFlow).catch(async n=>{throw n instanceof se&&He(n)?(this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,f(ue)):n})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),p(this.acquireTokenFromCache.bind(this),l.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch(n=>{if(t===Q.AccessToken)throw n;return this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_NETWORK_START,T.Silent,e),p(this.acquireTokenByRefreshToken.bind(this),l.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)}))}}function Th(i,e){const t=!(i instanceof ne&&i.subError!==Ht),n=i.errorCode===j.INVALID_GRANT_ERROR||i.errorCode===ue,r=t&&n||i.errorCode===kt||i.errorCode===Hn,o=ec.includes(e);return r&&o}/*! @azure/msal-browser v3.28.1 2025-01-14 */async function Ah(i,e){const t=new Pe(i);return await t.initialize(),qt.createController(t,e)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Mi{static async createPublicClientApplication(e){const t=await Ah(e);return new Mi(e,t)}constructor(e,t){this.controller=t||new qt(new Pe(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}export{Jt as C,Mi as P};
//# sourceMappingURL=graph-Z1oC2IgG.js.map
