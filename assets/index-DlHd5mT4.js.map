{"version":3,"file":"index-DlHd5mT4.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../config.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","export const GEMINI_API_KEY = 'your-gemini-api-key-here';\nexport const AZURE_CLIENT_ID = 'your-azure-client-id-here';\n\n// Optional: Customize AI prompts\nexport const CUSTOM_PROMPTS = {\n  mom: \"Generate comprehensive Minutes of Meeting from this transcript with key decisions, discussions, and participants:\",\n  actionItems: \"Extract all action items with assigned owners and deadlines from this meeting transcript:\",\n  summary: \"Create a concise 3-bullet executive summary of this meeting:\",\n  notes: \"Extract the most important notes and key takeaways from this meeting:\",\n  insights: \"Analyze this meeting for key insights, trends, and recommendations:\",\n  followUp: \"Identify follow-up actions and next steps from this meeting:\"\n};\n\n// Optional: Teams app customization\nexport const APP_CONFIG = {\n  name: \"Teams Meeting Insights Pro\",\n  description: \"AI-powered meeting analysis and documentation\",\n  accentColor: \"#6264A7\",\n  version: \"2.0.0\"\n};\n","import React, { useState, useEffect } from 'react';\nimport { Client } from '@microsoft/microsoft-graph-client';\nimport { PublicClientApplication } from '@azure/msal-browser';\nimport * as microsoftTeams from '@microsoft/teams-js';\nimport { GEMINI_API_KEY, AZURE_CLIENT_ID } from '../config.js';\n\nconst msalConfig = {\n  auth: {\n    clientId: AZURE_CLIENT_ID,\n    authority: 'https://login.microsoftonline.com/common',\n    redirectUri: window.location.origin\n  }\n};\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nconst prompts = {\n  mom: \"Generate comprehensive Minutes of Meeting from this transcript with key decisions, discussions, and participants:\",\n  actionItems: \"Extract all action items with assigned owners and deadlines from this meeting transcript:\",\n  summary: \"Create a concise 3-bullet executive summary of this meeting:\",\n  notes: \"Extract the most important notes and key takeaways from this meeting:\",\n  insights: \"Analyze this meeting for key insights, trends, and recommendations:\",\n  followUp: \"Identify follow-up actions and next steps from this meeting:\"\n};\n\nexport default function App() {\n  const [context, setContext] = useState(null);\n  const [meetings, setMeetings] = useState([]);\n  const [selectedMeeting, setSelectedMeeting] = useState('');\n  const [selectedPrompt, setSelectedPrompt] = useState('mom');\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [graphClient, setGraphClient] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    microsoftTeams.app.initialize().then(() => {\n      microsoftTeams.app.getContext().then(setContext);\n    });\n    initializeGraph();\n  }, []);\n\n  const initializeGraph = async () => {\n    try {\n      await msalInstance.initialize();\n      const accounts = msalInstance.getAllAccounts();\n      \n      if (accounts.length > 0) {\n        const silentRequest = {\n          scopes: ['https://graph.microsoft.com/OnlineMeetings.Read', 'https://graph.microsoft.com/Calendars.Read'],\n          account: accounts[0]\n        };\n        \n        const response = await msalInstance.acquireTokenSilent(silentRequest);\n        const client = Client.init({\n          authProvider: (done) => done(null, response.accessToken)\n        });\n        \n        setGraphClient(client);\n        setIsAuthenticated(true);\n        await fetchMeetings(client);\n      }\n    } catch (error) {\n      console.error('Graph initialization failed:', error);\n    }\n  };\n\n  const loginToGraph = async () => {\n    try {\n      const loginRequest = {\n        scopes: ['https://graph.microsoft.com/OnlineMeetings.Read', 'https://graph.microsoft.com/Calendars.Read']\n      };\n      \n      const response = await msalInstance.loginPopup(loginRequest);\n      const client = Client.init({\n        authProvider: (done) => done(null, response.accessToken)\n      });\n      \n      setGraphClient(client);\n      setIsAuthenticated(true);\n      await fetchMeetings(client);\n    } catch (error) {\n      setError('Failed to authenticate with Microsoft Graph');\n    }\n  };\n\n  const fetchMeetings = async (client) => {\n    try {\n      setLoading(true);\n      setError('');\n      const response = await client.api('/me/events')\n        .filter(\"isOnlineMeeting eq true\")\n        .orderby(\"start/dateTime desc\")\n        .top(25)\n        .get();\n      setMeetings(response.value || []);\n    } catch (error) {\n      setError('Failed to fetch meetings');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchTranscript = async (meetingId) => {\n    try {\n      // For demo purposes, we'll use a mock transcript\n      // In production, this would fetch from Graph API\n      const mockTranscript = `\n        Meeting started at 10:00 AM\n        Attendees: John Smith, Sarah Johnson, Mike Chen\n        \n        Discussion Points:\n        1. Project timeline review\n        2. Budget allocation for Q3\n        3. Resource planning\n        \n        Decisions Made:\n        - Approved budget increase of 15%\n        - Extended project deadline by 2 weeks\n        - Assigned Sarah as project lead\n        \n        Action Items:\n        - John to prepare cost breakdown by Friday\n        - Sarah to update project timeline\n        - Mike to coordinate with IT department\n        \n        Next meeting scheduled for next Tuesday at 2:00 PM\n      `;\n      \n      return mockTranscript;\n    } catch (error) {\n      setError('Failed to fetch transcript. This is a demo version.');\n      return null;\n    }\n  };\n\n  const generateInsights = async () => {\n    if (!selectedMeeting) {\n      setError('Please select a meeting first');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      \n      const transcript = await fetchTranscript(selectedMeeting);\n      if (!transcript) return;\n\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: `${prompts[selectedPrompt]}\\n\\n${transcript}`\n            }]\n          }]\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to generate insights');\n      }\n\n      const data = await response.json();\n      setResult(data.candidates?.[0]?.content?.parts?.[0]?.text || 'No insights generated');\n    } catch (error) {\n      setError('Failed to generate insights. Please check your API key.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(result);\n  };\n\n  return (\n    <div className=\"teams-app\">\n      <div className=\"app-header\">\n        <div className=\"header-content\">\n          <h1 className=\"app-title\">\n            <span className=\"icon\">🎯</span>\n            Teams Meeting Insights Pro\n          </h1>\n          <p className=\"app-subtitle\">AI-powered meeting analysis and documentation</p>\n        </div>\n      </div>\n\n      <div className=\"app-container\">\n        {!isAuthenticated ? (\n          <div className=\"auth-prompt\">\n            <div className=\"auth-content\">\n              <h3>Welcome to Meeting Insights Pro</h3>\n              <p>Sign in with your Microsoft account to access your Teams meetings and generate AI-powered insights</p>\n              <button className=\"auth-button\" onClick={loginToGraph}>\n                <span className=\"icon\">🔐</span>\n                Sign in with Microsoft\n              </button>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"control-panel\">\n              <div className=\"form-group\">\n                <label className=\"form-label\">Select Meeting</label>\n                <select \n                  className=\"form-select\" \n                  value={selectedMeeting} \n                  onChange={(e) => setSelectedMeeting(e.target.value)}\n                  disabled={loading}\n                >\n                  <option value=\"\">Choose a recent meeting...</option>\n                  {meetings.map(meeting => (\n                    <option key={meeting.id} value={meeting.id}>\n                      {meeting.subject} - {new Date(meeting.start.dateTime).toLocaleDateString()}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">Analysis Type</label>\n                <div className=\"button-group\">\n                  {Object.entries(prompts).map(([key, description]) => (\n                    <button\n                      key={key}\n                      className={`option-button ${selectedPrompt === key ? 'active' : ''}`}\n                      onClick={() => setSelectedPrompt(key)}\n                      disabled={loading}\n                    >\n                      {key === 'mom' ? 'Minutes' : \n                       key === 'actionItems' ? 'Action Items' : \n                       key === 'summary' ? 'Summary' : \n                       key === 'notes' ? 'Notes' : \n                       key === 'insights' ? 'Insights' :\n                       key === 'followUp' ? 'Follow-up' : key}\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              <button \n                className=\"generate-button\" \n                onClick={generateInsights}\n                disabled={loading || !selectedMeeting}\n              >\n                {loading ? (\n                  <>\n                    <span className=\"spinner\"></span>\n                    Analyzing Meeting...\n                  </>\n                ) : (\n                  <>\n                    <span className=\"icon\">✨</span>\n                    Generate Insights\n                  </>\n                )}\n              </button>\n            </div>\n\n            {error && (\n              <div className=\"error-message\">\n                <span className=\"error-icon\">⚠️</span>\n                {error}\n              </div>\n            )}\n\n            {result && (\n              <div className=\"result-panel\">\n                <div className=\"result-header\">\n                  <h3>Generated Analysis</h3>\n                  <button \n                    className=\"copy-button\"\n                    onClick={copyToClipboard}\n                  >\n                    📋 Copy to Clipboard\n                  </button>\n                </div>\n                <div className=\"result-content\">\n                  <pre>{result}</pre>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","GEMINI_API_KEY","AZURE_CLIENT_ID","msalConfig","msalInstance","PublicClientApplication","prompts","App","context","setContext","useState","meetings","setMeetings","selectedMeeting","setSelectedMeeting","selectedPrompt","setSelectedPrompt","result","setResult","loading","setLoading","error","setError","graphClient","setGraphClient","isAuthenticated","setIsAuthenticated","useEffect","microsoftTeams.app.initialize","microsoftTeams.app.getContext","initializeGraph","accounts","silentRequest","response","Client","done","fetchMeetings","loginToGraph","loginRequest","fetchTranscript","meetingId","generateInsights","transcript","data","_e","_d","_c","_b","_a","copyToClipboard","jsxs","jsx","Fragment","meeting","key","description","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2]}